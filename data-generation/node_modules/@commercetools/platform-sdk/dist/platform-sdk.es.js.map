{"version":3,"file":"platform-sdk.es.js","sources":["../src/generated/shared/utils/uri-utils.ts","../src/generated/shared/utils/requests-utils.ts","../src/generated/client/api-clients/by-project-key-api-clients-by-id-request-builder.ts","../src/generated/client/api-clients/by-project-key-api-clients-request-builder.ts","../src/generated/client/cart-discounts/by-project-key-cart-discounts-by-id-request-builder.ts","../src/generated/client/cart-discounts/by-project-key-cart-discounts-key-by-key-request-builder.ts","../src/generated/client/cart-discounts/by-project-key-cart-discounts-request-builder.ts","../src/generated/client/replicate/by-project-key-carts-replicate-request-builder.ts","../src/generated/client/carts/by-project-key-carts-by-id-request-builder.ts","../src/generated/client/carts/by-project-key-carts-customer-id-by-customer-id-request-builder.ts","../src/generated/client/carts/by-project-key-carts-key-by-key-request-builder.ts","../src/generated/client/carts/by-project-key-carts-request-builder.ts","../src/generated/client/categories/by-project-key-categories-by-id-request-builder.ts","../src/generated/client/categories/by-project-key-categories-key-by-key-request-builder.ts","../src/generated/client/categories/by-project-key-categories-request-builder.ts","../src/generated/client/channels/by-project-key-channels-by-id-request-builder.ts","../src/generated/client/channels/by-project-key-channels-request-builder.ts","../src/generated/client/custom-objects/by-project-key-custom-objects-by-container-by-key-request-builder.ts","../src/generated/client/custom-objects/by-project-key-custom-objects-by-container-request-builder.ts","../src/generated/client/custom-objects/by-project-key-custom-objects-request-builder.ts","../src/generated/client/customer-groups/by-project-key-customer-groups-by-id-request-builder.ts","../src/generated/client/customer-groups/by-project-key-customer-groups-key-by-key-request-builder.ts","../src/generated/client/customer-groups/by-project-key-customer-groups-request-builder.ts","../src/generated/client/confirm/by-project-key-customers-email-confirm-request-builder.ts","../src/generated/client/email-token/by-project-key-customers-email-token-request-builder.ts","../src/generated/client/password-token/by-project-key-customers-password-token-request-builder.ts","../src/generated/client/password/by-project-key-customers-password-request-builder.ts","../src/generated/client/reset/by-project-key-customers-password-reset-request-builder.ts","../src/generated/client/customers/by-project-key-customers-by-id-request-builder.ts","../src/generated/client/customers/by-project-key-customers-email-token-by-email-token-request-builder.ts","../src/generated/client/customers/by-project-key-customers-key-by-key-request-builder.ts","../src/generated/client/customers/by-project-key-customers-password-token-by-password-token-request-builder.ts","../src/generated/client/customers/by-project-key-customers-request-builder.ts","../src/generated/client/discount-codes/by-project-key-discount-codes-by-id-request-builder.ts","../src/generated/client/discount-codes/by-project-key-discount-codes-request-builder.ts","../src/generated/client/extensions/by-project-key-extensions-by-id-request-builder.ts","../src/generated/client/extensions/by-project-key-extensions-key-by-key-request-builder.ts","../src/generated/client/extensions/by-project-key-extensions-request-builder.ts","../src/generated/client/graphql/by-project-key-graphql-request-builder.ts","../src/generated/client/replicate/by-project-key-in-store-key-by-store-key-carts-replicate-request-builder.ts","../src/generated/client/carts/by-project-key-in-store-key-by-store-key-carts-by-id-request-builder.ts","../src/generated/client/carts/by-project-key-in-store-key-by-store-key-carts-customer-id-by-customer-id-request-builder.ts","../src/generated/client/carts/by-project-key-in-store-key-by-store-key-carts-key-by-key-request-builder.ts","../src/generated/client/carts/by-project-key-in-store-key-by-store-key-carts-request-builder.ts","../src/generated/client/confirm/by-project-key-in-store-key-by-store-key-customers-email-confirm-request-builder.ts","../src/generated/client/email-token/by-project-key-in-store-key-by-store-key-customers-email-token-request-builder.ts","../src/generated/client/password-token/by-project-key-in-store-key-by-store-key-customers-password-token-request-builder.ts","../src/generated/client/password/by-project-key-in-store-key-by-store-key-customers-password-request-builder.ts","../src/generated/client/reset/by-project-key-in-store-key-by-store-key-customers-password-reset-request-builder.ts","../src/generated/client/customers/by-project-key-in-store-key-by-store-key-customers-by-id-request-builder.ts","../src/generated/client/customers/by-project-key-in-store-key-by-store-key-customers-email-token-by-email-token-request-builder.ts","../src/generated/client/customers/by-project-key-in-store-key-by-store-key-customers-key-by-key-request-builder.ts","../src/generated/client/customers/by-project-key-in-store-key-by-store-key-customers-password-token-by-password-token-request-builder.ts","../src/generated/client/customers/by-project-key-in-store-key-by-store-key-customers-request-builder.ts","../src/generated/client/login/by-project-key-in-store-key-by-store-key-login-request-builder.ts","../src/generated/client/active-cart/by-project-key-in-store-key-by-store-key-me-active-cart-request-builder.ts","../src/generated/client/carts/by-project-key-in-store-key-by-store-key-me-carts-by-id-request-builder.ts","../src/generated/client/carts/by-project-key-in-store-key-by-store-key-me-carts-request-builder.ts","../src/generated/client/orders/by-project-key-in-store-key-by-store-key-me-orders-by-id-request-builder.ts","../src/generated/client/orders/by-project-key-in-store-key-by-store-key-me-orders-request-builder.ts","../src/generated/client/me/by-project-key-in-store-key-by-store-key-me-request-builder.ts","../src/generated/client/orders/by-project-key-in-store-key-by-store-key-orders-by-id-request-builder.ts","../src/generated/client/orders/by-project-key-in-store-key-by-store-key-orders-order-number-by-order-number-request-builder.ts","../src/generated/client/orders/by-project-key-in-store-key-by-store-key-orders-request-builder.ts","../src/generated/client/matching-cart/by-project-key-in-store-key-by-store-key-shipping-methods-matching-cart-request-builder.ts","../src/generated/client/shipping-methods/by-project-key-in-store-key-by-store-key-shipping-methods-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-in-store-key-by-store-key-shopping-lists-by-id-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-in-store-key-by-store-key-shopping-lists-key-by-key-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-in-store-key-by-store-key-shopping-lists-request-builder.ts","../src/generated/client/in-store/by-project-key-in-store-key-by-store-key-request-builder.ts","../src/generated/client/inventory/by-project-key-inventory-by-id-request-builder.ts","../src/generated/client/inventory/by-project-key-inventory-request-builder.ts","../src/generated/client/login/by-project-key-login-request-builder.ts","../src/generated/client/active-cart/by-project-key-me-active-cart-request-builder.ts","../src/generated/client/carts/by-project-key-me-carts-by-id-request-builder.ts","../src/generated/client/carts/by-project-key-me-carts-key-by-key-request-builder.ts","../src/generated/client/carts/by-project-key-me-carts-request-builder.ts","../src/generated/client/confirm/by-project-key-me-email-confirm-request-builder.ts","../src/generated/client/login/by-project-key-me-login-request-builder.ts","../src/generated/client/orders/by-project-key-me-orders-by-id-request-builder.ts","../src/generated/client/orders/by-project-key-me-orders-request-builder.ts","../src/generated/client/reset/by-project-key-me-password-reset-request-builder.ts","../src/generated/client/password/by-project-key-me-password-request-builder.ts","../src/generated/client/payments/by-project-key-me-payments-by-id-request-builder.ts","../src/generated/client/payments/by-project-key-me-payments-key-by-key-request-builder.ts","../src/generated/client/payments/by-project-key-me-payments-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-me-shopping-lists-by-id-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-me-shopping-lists-key-by-key-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-me-shopping-lists-request-builder.ts","../src/generated/client/signup/by-project-key-me-signup-request-builder.ts","../src/generated/client/me/by-project-key-me-request-builder.ts","../src/generated/client/messages/by-project-key-messages-by-id-request-builder.ts","../src/generated/client/messages/by-project-key-messages-request-builder.ts","../src/generated/client/apply/by-project-key-orders-edits-by-id-apply-request-builder.ts","../src/generated/client/edits/by-project-key-orders-edits-by-id-request-builder.ts","../src/generated/client/edits/by-project-key-orders-edits-key-by-key-request-builder.ts","../src/generated/client/edits/by-project-key-orders-edits-request-builder.ts","../src/generated/client/import/by-project-key-orders-import-request-builder.ts","../src/generated/client/orders/by-project-key-orders-by-id-request-builder.ts","../src/generated/client/orders/by-project-key-orders-order-number-by-order-number-request-builder.ts","../src/generated/client/orders/by-project-key-orders-request-builder.ts","../src/generated/client/payments/by-project-key-payments-by-id-request-builder.ts","../src/generated/client/payments/by-project-key-payments-key-by-key-request-builder.ts","../src/generated/client/payments/by-project-key-payments-request-builder.ts","../src/generated/client/matching/by-project-key-product-discounts-matching-request-builder.ts","../src/generated/client/product-discounts/by-project-key-product-discounts-by-id-request-builder.ts","../src/generated/client/product-discounts/by-project-key-product-discounts-key-by-key-request-builder.ts","../src/generated/client/product-discounts/by-project-key-product-discounts-request-builder.ts","../src/generated/client/search/by-project-key-product-projections-search-request-builder.ts","../src/generated/client/suggest/by-project-key-product-projections-suggest-request-builder.ts","../src/generated/client/product-projections/by-project-key-product-projections-by-id-request-builder.ts","../src/generated/client/product-projections/by-project-key-product-projections-key-by-key-request-builder.ts","../src/generated/client/product-projections/by-project-key-product-projections-request-builder.ts","../src/generated/client/product-types/by-project-key-product-types-by-id-request-builder.ts","../src/generated/client/product-types/by-project-key-product-types-key-by-key-request-builder.ts","../src/generated/client/product-types/by-project-key-product-types-request-builder.ts","../src/generated/client/images/by-project-key-products-by-id-images-request-builder.ts","../src/generated/client/products/by-project-key-products-by-id-request-builder.ts","../src/generated/client/products/by-project-key-products-key-by-key-request-builder.ts","../src/generated/client/products/by-project-key-products-request-builder.ts","../src/generated/client/reviews/by-project-key-reviews-by-id-request-builder.ts","../src/generated/client/reviews/by-project-key-reviews-key-by-key-request-builder.ts","../src/generated/client/reviews/by-project-key-reviews-request-builder.ts","../src/generated/client/matching-cart/by-project-key-shipping-methods-matching-cart-request-builder.ts","../src/generated/client/matching-location/by-project-key-shipping-methods-matching-location-request-builder.ts","../src/generated/client/matching-orderedit/by-project-key-shipping-methods-matching-orderedit-request-builder.ts","../src/generated/client/shipping-methods/by-project-key-shipping-methods-by-id-request-builder.ts","../src/generated/client/shipping-methods/by-project-key-shipping-methods-key-by-key-request-builder.ts","../src/generated/client/shipping-methods/by-project-key-shipping-methods-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-shopping-lists-by-id-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-shopping-lists-key-by-key-request-builder.ts","../src/generated/client/shopping-lists/by-project-key-shopping-lists-request-builder.ts","../src/generated/client/states/by-project-key-states-by-id-request-builder.ts","../src/generated/client/states/by-project-key-states-key-by-key-request-builder.ts","../src/generated/client/states/by-project-key-states-request-builder.ts","../src/generated/client/stores/by-project-key-stores-by-id-request-builder.ts","../src/generated/client/stores/by-project-key-stores-key-by-key-request-builder.ts","../src/generated/client/stores/by-project-key-stores-request-builder.ts","../src/generated/client/subscriptions/by-project-key-subscriptions-by-id-request-builder.ts","../src/generated/client/subscriptions/by-project-key-subscriptions-key-by-key-request-builder.ts","../src/generated/client/subscriptions/by-project-key-subscriptions-request-builder.ts","../src/generated/client/tax-categories/by-project-key-tax-categories-by-id-request-builder.ts","../src/generated/client/tax-categories/by-project-key-tax-categories-key-by-key-request-builder.ts","../src/generated/client/tax-categories/by-project-key-tax-categories-request-builder.ts","../src/generated/client/types/by-project-key-types-by-id-request-builder.ts","../src/generated/client/types/by-project-key-types-key-by-key-request-builder.ts","../src/generated/client/types/by-project-key-types-request-builder.ts","../src/generated/client/zones/by-project-key-zones-by-id-request-builder.ts","../src/generated/client/zones/by-project-key-zones-key-by-key-request-builder.ts","../src/generated/client/zones/by-project-key-zones-request-builder.ts","../src/generated/client/by-project-key-request-builder.ts","../src/generated/client/api-root.ts","../src/generated/shared/utils/middleware.ts","../src/ctp/ctp-client.ts"],"sourcesContent":["/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\n\nimport { stringify } from 'querystring'\nimport { ClientRequest, VariableMap } from './common-types'\n\nfunction isDefined<T>(value: T | undefined | null): value is T {\n  return typeof value !== 'undefined' && value !== null\n}\n\nfunction cleanObject<T extends VariableMap>(obj: T): T {\n  return Object.keys(obj).reduce<T>((result, key) => {\n    const value = obj[key]\n\n    if (Array.isArray(value)) {\n      const values = (value as unknown[]).filter(isDefined)\n      if (!values.length) {\n        return result\n      }\n\n      return {\n        ...result,\n        [key]: values,\n      }\n    }\n\n    if (isDefined(value)) {\n      return { ...result, [key]: value }\n    }\n\n    return result\n  }, {} as T)\n}\n\nfunction formatQueryString(variableMap: VariableMap) {\n  const map = cleanObject(variableMap)\n  const result = stringify(map)\n  if (result === '') {\n    return ''\n  }\n  return `?${result}`\n}\n\nexport function buildRelativeUri(commonRequest: ClientRequest): string {\n  const pathMap = commonRequest.pathVariables\n  var uri: string = commonRequest.uriTemplate as string\n\n  for (const param in pathMap) {\n    uri = uri.replace(`{${param}}`, `${pathMap[param]}`)\n  }\n\n  const resQuery = formatQueryString(commonRequest.queryParams || {})\n  return `${uri}${resQuery}`\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\n\nimport { ClientRequest, ClientResponse, executeRequest } from './common-types'\nimport { buildRelativeUri } from './uri-utils'\n\nexport class ApiRequest<O> {\n  private request: ClientRequest\n  constructor(\n    request: ClientRequest,\n    private readonly requestExecutor: executeRequest\n  ) {\n    this.request = {\n      ...request,\n      uri: buildRelativeUri(request),\n    }\n  }\n\n  public clientRequest(): ClientRequest {\n    return this.request\n  }\n\n  public execute(): Promise<ClientResponse<O>> {\n    return this.requestExecutor(this.request)\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ApiClient } from '../../models/api-client'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyApiClientsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet ApiClient by ID\n   */\n  public get(methodArgs?: {\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ApiClient> {\n    return new ApiRequest<ApiClient>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/api-clients/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ApiClient by ID\n   */\n  public delete(methodArgs?: {\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ApiClient> {\n    return new ApiRequest<ApiClient>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/api-clients/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ApiClient,\n  ApiClientDraft,\n  ApiClientPagedQueryResponse,\n} from '../../models/api-client'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyApiClientsByIDRequestBuilder } from './by-project-key-api-clients-by-id-request-builder'\n\nexport class ByProjectKeyApiClientsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyApiClientsByIDRequestBuilder {\n    return new ByProjectKeyApiClientsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery api-clients\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ApiClientPagedQueryResponse> {\n    return new ApiRequest<ApiClientPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/api-clients',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate ApiClient\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ApiClientDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ApiClient> {\n    return new ApiRequest<ApiClient>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/api-clients',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CartDiscount, CartDiscountUpdate } from '../../models/cart-discount'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCartDiscountsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet CartDiscount by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartDiscount> {\n    return new ApiRequest<CartDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/cart-discounts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate CartDiscount by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartDiscountUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartDiscount> {\n    return new ApiRequest<CartDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/cart-discounts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete CartDiscount by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartDiscount> {\n    return new ApiRequest<CartDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/cart-discounts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CartDiscount, CartDiscountUpdate } from '../../models/cart-discount'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCartDiscountsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet CartDiscount by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartDiscount> {\n    return new ApiRequest<CartDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/cart-discounts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate CartDiscount by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartDiscountUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartDiscount> {\n    return new ApiRequest<CartDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/cart-discounts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete CartDiscount by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartDiscount> {\n    return new ApiRequest<CartDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/cart-discounts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  CartDiscount,\n  CartDiscountDraft,\n  CartDiscountPagedQueryResponse,\n} from '../../models/cart-discount'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyCartDiscountsByIDRequestBuilder } from './by-project-key-cart-discounts-by-id-request-builder'\nimport { ByProjectKeyCartDiscountsKeyByKeyRequestBuilder } from './by-project-key-cart-discounts-key-by-key-request-builder'\n\nexport class ByProjectKeyCartDiscountsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyCartDiscountsKeyByKeyRequestBuilder {\n    return new ByProjectKeyCartDiscountsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyCartDiscountsByIDRequestBuilder {\n    return new ByProjectKeyCartDiscountsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery cart-discounts\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartDiscountPagedQueryResponse> {\n    return new ApiRequest<CartDiscountPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/cart-discounts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate CartDiscount\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartDiscountDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartDiscount> {\n    return new ApiRequest<CartDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/cart-discounts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, ReplicaCartDraft } from '../../models/cart'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCartsReplicateRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public post(methodArgs: {\n    body: ReplicaCartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/carts/replicate',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, CartUpdate } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCartsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tThe cart may not contain up-to-date prices, discounts etc.\n   *\tIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Cart by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Cart by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        customerId: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tRetrieves the active cart of the customer that has been modified most recently.\n   *\tIt does not consider carts with CartOrigin Merchant. If no active cart exists, a 404 Not Found error is returned.\n   *\n   *\tThe cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,\n   *\tsend an Update request with the Recalculate update action instead.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/carts/customer-id={customerId}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, CartUpdate } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCartsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tThe cart may not contain up-to-date prices, discounts etc.\n   *\tIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Cart by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Cart by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, CartDraft, CartPagedQueryResponse } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyCartsReplicateRequestBuilder } from '../replicate/by-project-key-carts-replicate-request-builder'\nimport { ByProjectKeyCartsByIDRequestBuilder } from './by-project-key-carts-by-id-request-builder'\nimport { ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder } from './by-project-key-carts-customer-id-by-customer-id-request-builder'\nimport { ByProjectKeyCartsKeyByKeyRequestBuilder } from './by-project-key-carts-key-by-key-request-builder'\n\nexport class ByProjectKeyCartsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public replicate(): ByProjectKeyCartsReplicateRequestBuilder {\n    return new ByProjectKeyCartsReplicateRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withCustomerId(childPathArgs: {\n    customerId: string\n  }): ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder {\n    return new ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyCartsKeyByKeyRequestBuilder {\n    return new ByProjectKeyCartsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyCartsByIDRequestBuilder {\n    return new ByProjectKeyCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery carts\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      customerId?: string\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartPagedQueryResponse> {\n    return new ApiRequest<CartPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/carts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreating a cart can fail with an InvalidOperation if the referenced shipping method in the\n   *\tCartDraft has a predicate which does not match the cart.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/carts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Category, CategoryUpdate } from '../../models/category'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCategoriesByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Category by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Category> {\n    return new ApiRequest<Category>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/categories/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Category by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CategoryUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Category> {\n    return new ApiRequest<Category>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/categories/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Category by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Category> {\n    return new ApiRequest<Category>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/categories/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Category, CategoryUpdate } from '../../models/category'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCategoriesKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Category by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Category> {\n    return new ApiRequest<Category>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/categories/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Category by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CategoryUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Category> {\n    return new ApiRequest<Category>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/categories/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Category by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Category> {\n    return new ApiRequest<Category>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/categories/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Category,\n  CategoryDraft,\n  CategoryPagedQueryResponse,\n} from '../../models/category'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyCategoriesByIDRequestBuilder } from './by-project-key-categories-by-id-request-builder'\nimport { ByProjectKeyCategoriesKeyByKeyRequestBuilder } from './by-project-key-categories-key-by-key-request-builder'\n\nexport class ByProjectKeyCategoriesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyCategoriesKeyByKeyRequestBuilder {\n    return new ByProjectKeyCategoriesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyCategoriesByIDRequestBuilder {\n    return new ByProjectKeyCategoriesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery categories\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CategoryPagedQueryResponse> {\n    return new ApiRequest<CategoryPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/categories',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreating a category produces the CategoryCreated message.\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CategoryDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Category> {\n    return new ApiRequest<Category>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/categories',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Channel, ChannelUpdate } from '../../models/channel'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyChannelsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Channel by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Channel> {\n    return new ApiRequest<Channel>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/channels/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Channel by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ChannelUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Channel> {\n    return new ApiRequest<Channel>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/channels/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Channel by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Channel> {\n    return new ApiRequest<Channel>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/channels/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Channel,\n  ChannelDraft,\n  ChannelPagedQueryResponse,\n} from '../../models/channel'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyChannelsByIDRequestBuilder } from './by-project-key-channels-by-id-request-builder'\n\nexport class ByProjectKeyChannelsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyChannelsByIDRequestBuilder {\n    return new ByProjectKeyChannelsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery channels\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ChannelPagedQueryResponse> {\n    return new ApiRequest<ChannelPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/channels',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate Channel\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ChannelDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Channel> {\n    return new ApiRequest<Channel>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/channels',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomObject } from '../../models/custom-object'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        container: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet CustomObject by container and key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomObject> {\n    return new ApiRequest<CustomObject>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete CustomObject by container and key\n   */\n  public delete(methodArgs?: {\n    queryArgs?: {\n      version?: number\n      dataErasure?: boolean\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomObject> {\n    return new ApiRequest<CustomObject>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomObjectPagedQueryResponse } from '../../models/custom-object'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomObjectsByContainerRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        container: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet CustomObjectPagedQueryResponse by container\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      where?: string | string[]\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomObjectPagedQueryResponse> {\n    return new ApiRequest<CustomObjectPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/custom-objects/{container}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  CustomObject,\n  CustomObjectDraft,\n  CustomObjectPagedQueryResponse,\n} from '../../models/custom-object'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder } from './by-project-key-custom-objects-by-container-by-key-request-builder'\nimport { ByProjectKeyCustomObjectsByContainerRequestBuilder } from './by-project-key-custom-objects-by-container-request-builder'\n\nexport class ByProjectKeyCustomObjectsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withContainerAndKey(childPathArgs: {\n    container: string\n    key: string\n  }): ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder {\n    return new ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withContainer(childPathArgs: {\n    container: string\n  }): ByProjectKeyCustomObjectsByContainerRequestBuilder {\n    return new ByProjectKeyCustomObjectsByContainerRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tThe query endpoint allows to retrieve custom objects in a specific container or all custom objects.\n   *\tFor performance reasons, it is highly advisable to query only for custom objects in a container by using\n   *\tthe container field in the where predicate.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomObjectPagedQueryResponse> {\n    return new ApiRequest<CustomObjectPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/custom-objects',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreates a new custom object or updates an existing custom object.\n   *\tIf an object with the given container/key exists,\n   *\tthe object will be replaced with the new value and the version is incremented.\n   *\tIf the request contains a version and an object with the given container/key exists then the version\n   *\tmust match the version of the existing object. Concurrent updates for the same custom object still can result\n   *\tin a Conflict (409) even if the version is not provided.\n   *\tFields with null values will not be saved.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomObjectDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomObject> {\n    return new ApiRequest<CustomObject>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/custom-objects',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerGroup, CustomerGroupUpdate } from '../../models/customer-group'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomerGroupsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet CustomerGroup by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerGroup> {\n    return new ApiRequest<CustomerGroup>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/customer-groups/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate CustomerGroup by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerGroupUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerGroup> {\n    return new ApiRequest<CustomerGroup>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customer-groups/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete CustomerGroup by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerGroup> {\n    return new ApiRequest<CustomerGroup>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/customer-groups/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerGroup, CustomerGroupUpdate } from '../../models/customer-group'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGets a customer group by Key.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerGroup> {\n    return new ApiRequest<CustomerGroup>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/customer-groups/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdates a customer group by Key.\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerGroupUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerGroup> {\n    return new ApiRequest<CustomerGroup>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customer-groups/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete CustomerGroup by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerGroup> {\n    return new ApiRequest<CustomerGroup>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/customer-groups/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  CustomerGroup,\n  CustomerGroupDraft,\n  CustomerGroupPagedQueryResponse,\n} from '../../models/customer-group'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyCustomerGroupsByIDRequestBuilder } from './by-project-key-customer-groups-by-id-request-builder'\nimport { ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder } from './by-project-key-customer-groups-key-by-key-request-builder'\n\nexport class ByProjectKeyCustomerGroupsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder {\n    return new ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyCustomerGroupsByIDRequestBuilder {\n    return new ByProjectKeyCustomerGroupsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery customer-groups\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerGroupPagedQueryResponse> {\n    return new ApiRequest<CustomerGroupPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/customer-groups',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate CustomerGroup\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerGroupDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerGroup> {\n    return new ApiRequest<CustomerGroup>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customer-groups',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerEmailVerify } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersEmailConfirmRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tVerifies customer's email using a token.\n   */\n  public post(methodArgs: {\n    body: CustomerEmailVerify\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<void> {\n    return new ApiRequest<void>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customers/email/confirm',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerCreateEmailToken, CustomerToken } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersEmailTokenRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tCreate a Token for verifying the Customer's Email\n   */\n  public post(methodArgs: {\n    body: CustomerCreateEmailToken\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerToken> {\n    return new ApiRequest<CustomerToken>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customers/email-token',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  CustomerCreatePasswordResetToken,\n  CustomerToken,\n} from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersPasswordTokenRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tThe token value is used to reset the password of the customer with the given email. The token is\n   *\tvalid only for 10 minutes.\n   *\n   */\n  public post(methodArgs: {\n    body: CustomerCreatePasswordResetToken\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerToken> {\n    return new ApiRequest<CustomerToken>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customers/password-token',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer, CustomerChangePassword } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersPasswordRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tChange a customers password\n   */\n  public post(methodArgs: {\n    body: CustomerChangePassword\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customers/password',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer, CustomerResetPassword } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersPasswordResetRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tSet a new password using a token.\n   */\n  public post(methodArgs: {\n    body: CustomerResetPassword\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customers/password/reset',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer, CustomerUpdate } from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Customer by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/customers/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Customer by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customers/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Customer by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/customers/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer } from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        emailToken: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Customer by emailToken\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/customers/email-token={emailToken}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer, CustomerUpdate } from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Customer by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/customers/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Customer by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customers/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Customer by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/customers/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer } from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        passwordToken: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Customer by passwordToken\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/customers/password-token={passwordToken}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  CustomerDraft,\n  CustomerPagedQueryResponse,\n  CustomerSignInResult,\n} from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyCustomersEmailConfirmRequestBuilder } from '../confirm/by-project-key-customers-email-confirm-request-builder'\nimport { ByProjectKeyCustomersEmailTokenRequestBuilder } from '../email-token/by-project-key-customers-email-token-request-builder'\nimport { ByProjectKeyCustomersPasswordTokenRequestBuilder } from '../password-token/by-project-key-customers-password-token-request-builder'\nimport { ByProjectKeyCustomersPasswordRequestBuilder } from '../password/by-project-key-customers-password-request-builder'\nimport { ByProjectKeyCustomersPasswordResetRequestBuilder } from '../reset/by-project-key-customers-password-reset-request-builder'\nimport { ByProjectKeyCustomersByIDRequestBuilder } from './by-project-key-customers-by-id-request-builder'\nimport { ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder } from './by-project-key-customers-email-token-by-email-token-request-builder'\nimport { ByProjectKeyCustomersKeyByKeyRequestBuilder } from './by-project-key-customers-key-by-key-request-builder'\nimport { ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder } from './by-project-key-customers-password-token-by-password-token-request-builder'\n\nexport class ByProjectKeyCustomersRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withPasswordToken(childPathArgs: {\n    passwordToken: string\n  }): ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {\n    return new ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withEmailToken(childPathArgs: {\n    emailToken: string\n  }): ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder {\n    return new ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tTo verify a customer's email, an email token can be created. This should be embedded in a link and sent to the\n   *\tcustomer via email. When the customer clicks on the link, the \"verify customer's email\" endpoint should be called,\n   *\twhich sets customer's isVerifiedEmail field to true.\n   *\n   */\n  public emailToken(): ByProjectKeyCustomersEmailTokenRequestBuilder {\n    return new ByProjectKeyCustomersEmailTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public emailConfirm(): ByProjectKeyCustomersEmailConfirmRequestBuilder {\n    return new ByProjectKeyCustomersEmailConfirmRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public password(): ByProjectKeyCustomersPasswordRequestBuilder {\n    return new ByProjectKeyCustomersPasswordRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public passwordReset(): ByProjectKeyCustomersPasswordResetRequestBuilder {\n    return new ByProjectKeyCustomersPasswordResetRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tThe following workflow can be used to reset the customer's password:\n   *\n   *\t* Create a password reset token and send it embedded in a link to the customer.\n   *\t* When the customer clicks on the link, the customer is retrieved with the token.\n   *\t* The customer enters a new password and the \"reset customer's password\" endpoint is called.\n   *\n   */\n  public passwordToken(): ByProjectKeyCustomersPasswordTokenRequestBuilder {\n    return new ByProjectKeyCustomersPasswordTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyCustomersKeyByKeyRequestBuilder {\n    return new ByProjectKeyCustomersKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyCustomersByIDRequestBuilder {\n    return new ByProjectKeyCustomersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery customers\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerPagedQueryResponse> {\n    return new ApiRequest<CustomerPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/customers',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreates a customer. If an anonymous cart is passed in,\n   *\tthen the cart is assigned to the created customer and the version number of the Cart will increase.\n   *\tIf the ID of an anonymous session is given, all carts and orders will be assigned to the created customer.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerSignInResult> {\n    return new ApiRequest<CustomerSignInResult>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/customers',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { DiscountCode, DiscountCodeUpdate } from '../../models/discount-code'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyDiscountCodesByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet DiscountCode by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<DiscountCode> {\n    return new ApiRequest<DiscountCode>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/discount-codes/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate DiscountCode by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: DiscountCodeUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<DiscountCode> {\n    return new ApiRequest<DiscountCode>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/discount-codes/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete DiscountCode by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<DiscountCode> {\n    return new ApiRequest<DiscountCode>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/discount-codes/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  DiscountCode,\n  DiscountCodeDraft,\n  DiscountCodePagedQueryResponse,\n} from '../../models/discount-code'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyDiscountCodesByIDRequestBuilder } from './by-project-key-discount-codes-by-id-request-builder'\n\nexport class ByProjectKeyDiscountCodesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyDiscountCodesByIDRequestBuilder {\n    return new ByProjectKeyDiscountCodesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery discount-codes\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<DiscountCodePagedQueryResponse> {\n    return new ApiRequest<DiscountCodePagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/discount-codes',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate DiscountCode\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: DiscountCodeDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<DiscountCode> {\n    return new ApiRequest<DiscountCode>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/discount-codes',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Extension, ExtensionUpdate } from '../../models/extension'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyExtensionsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tRetrieves the representation of an extension by its id.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Extension> {\n    return new ApiRequest<Extension>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/extensions/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Extension by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ExtensionUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Extension> {\n    return new ApiRequest<Extension>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/extensions/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Extension by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Extension> {\n    return new ApiRequest<Extension>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/extensions/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Extension, ExtensionUpdate } from '../../models/extension'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyExtensionsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tRetrieves the representation of an extension by its key.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Extension> {\n    return new ApiRequest<Extension>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/extensions/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Extension by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ExtensionUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Extension> {\n    return new ApiRequest<Extension>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/extensions/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Extension by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Extension> {\n    return new ApiRequest<Extension>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/extensions/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Extension,\n  ExtensionDraft,\n  ExtensionPagedQueryResponse,\n} from '../../models/extension'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyExtensionsByIDRequestBuilder } from './by-project-key-extensions-by-id-request-builder'\nimport { ByProjectKeyExtensionsKeyByKeyRequestBuilder } from './by-project-key-extensions-key-by-key-request-builder'\n\nexport class ByProjectKeyExtensionsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyExtensionsKeyByKeyRequestBuilder {\n    return new ByProjectKeyExtensionsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyExtensionsByIDRequestBuilder {\n    return new ByProjectKeyExtensionsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery extensions\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ExtensionPagedQueryResponse> {\n    return new ApiRequest<ExtensionPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/extensions',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCurrently, a maximum of 25 extensions can be created per project.\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ExtensionDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Extension> {\n    return new ApiRequest<Extension>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/extensions',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { GraphQLRequest, GraphQLResponse } from '../../models/graph-ql'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyGraphqlRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tExecute a GraphQL query\n   */\n  public post(methodArgs: {\n    body: GraphQLRequest\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<GraphQLResponse> {\n    return new ApiRequest<GraphQLResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/graphql',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/graphql',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, ReplicaCartDraft } from '../../models/cart'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public post(methodArgs: {\n    body: ReplicaCartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/replicate',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, CartUpdate } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tReturns a cart by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\n   *\tIf the cart exists in the commercetools project but does not have the store field,\n   *\tor the store field references a different store, this method returns a ResourceNotFound error.\n   *\tThe cart may not contain up-to-date prices, discounts etc.\n   *\tIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\n   *\tIf the cart exists in the commercetools project but does not have the store field,\n   *\tor the store field references a different store, this method returns a ResourceNotFound error.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Cart by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        customerId: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tRetrieves the active cart of the customer that has been modified most recently in a specific Store.\n   *\tThe {storeKey} path parameter maps to a Store's key.\n   *\n   *\tIf the cart exists in the commercetools project but does not have the store field, or the store field\n   *\treferences a different store, this method returns a ResourceNotFound error.\n   *\n   *\tThe cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,\n   *\tsend an Update request with the Recalculate update action instead.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, CartUpdate } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tReturns a cart by its key from a specific Store. The {storeKey} path parameter maps to a Store's key.\n   *\tIf the cart exists in the commercetools project but does not have the store field,\n   *\tor the store field references a different store, this method returns a ResourceNotFound error.\n   *\tThe cart may not contain up-to-date prices, discounts etc.\n   *\tIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\n   *\tIf the cart exists in the commercetools project but does not have the store field,\n   *\tor the store field references a different store, this method returns a ResourceNotFound error.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Cart by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, CartDraft } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder } from '../replicate/by-project-key-in-store-key-by-store-key-carts-replicate-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder } from './by-project-key-in-store-key-by-store-key-carts-by-id-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder } from './by-project-key-in-store-key-by-store-key-carts-customer-id-by-customer-id-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder } from './by-project-key-in-store-key-by-store-key-carts-key-by-key-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withCustomerId(childPathArgs: {\n    customerId: string\n  }): ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n          ...childPathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public replicate(): ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQueries carts in a specific Store. The {storeKey} path parameter maps to a Store's key.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      customerId?: string\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<any> {\n    return new ApiRequest<any>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\n   *\tWhen using this endpoint the cart's store field is always set to the store specified in the path parameter.\n   *\tCreating a cart can fail with an InvalidOperation if the referenced shipping method\n   *\tin the CartDraft has a predicate which does not match the cart.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerEmailVerify } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tVerifies customer's email using a token.\n   */\n  public post(methodArgs: {\n    body: CustomerEmailVerify\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<void> {\n    return new ApiRequest<void>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/email/confirm',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerCreateEmailToken, CustomerToken } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tCreate a Token for verifying the Customer's Email in store\n   */\n  public post(methodArgs: {\n    body: CustomerCreateEmailToken\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerToken> {\n    return new ApiRequest<CustomerToken>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/email-token',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  CustomerCreatePasswordResetToken,\n  CustomerToken,\n} from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tThe token value is used to reset the password of the customer with the given email. The token is\n   *\tvalid only for 10 minutes.\n   *\n   */\n  public post(methodArgs: {\n    body: CustomerCreatePasswordResetToken\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerToken> {\n    return new ApiRequest<CustomerToken>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/password-token',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer, CustomerChangePassword } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tChange a customers password\n   */\n  public post(methodArgs: {\n    body: CustomerChangePassword\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer, CustomerResetPassword } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tSet a new password using a token.\n   */\n  public post(methodArgs: {\n    body: CustomerResetPassword\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/password/reset',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer, CustomerUpdate } from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tReturns a customer by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\n   *\tIt also considers customers that do not have the stores field.\n   *\tIf the customer exists in the commercetools project but the stores field references different stores,\n   *\tthis method returns a ResourceNotFound error.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\n   *\tIf the customer exists in the commercetools project but the stores field references a different store,\n   *\tthis method returns a ResourceNotFound error.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Customer by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer } from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        emailToken: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Customer by emailToken\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer, CustomerUpdate } from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tReturns a customer by its Key from a specific Store. The {storeKey} path parameter maps to a Store's key.\n   *\tIt also considers customers that do not have the stores field.\n   *\tIf the customer exists in the commercetools project but the stores field references different stores,\n   *\tthis method returns a ResourceNotFound error.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tIf the customer exists in the commercetools project but the stores field references a different store,\n   *\tthis method returns a ResourceNotFound error.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Customer by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Customer } from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        passwordToken: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Customer by passwordToken\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Customer> {\n    return new ApiRequest<Customer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  CustomerDraft,\n  CustomerPagedQueryResponse,\n  CustomerSignInResult,\n} from '../../models/customer'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder } from '../confirm/by-project-key-in-store-key-by-store-key-customers-email-confirm-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder } from '../email-token/by-project-key-in-store-key-by-store-key-customers-email-token-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder } from '../password-token/by-project-key-in-store-key-by-store-key-customers-password-token-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder } from '../password/by-project-key-in-store-key-by-store-key-customers-password-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder } from '../reset/by-project-key-in-store-key-by-store-key-customers-password-reset-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder } from './by-project-key-in-store-key-by-store-key-customers-by-id-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder } from './by-project-key-in-store-key-by-store-key-customers-email-token-by-email-token-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder } from './by-project-key-in-store-key-by-store-key-customers-key-by-key-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder } from './by-project-key-in-store-key-by-store-key-customers-password-token-by-password-token-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withPasswordToken(childPathArgs: {\n    passwordToken: string\n  }): ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n          ...childPathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  public withEmailToken(childPathArgs: {\n    emailToken: string\n  }): ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n          ...childPathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  /**\n   *\tTo verify a customer's email, an email token can be created. This should be embedded in a link and sent to the\n   *\tcustomer via email. When the customer clicks on the link,\n   *\tthe \"verify customer's email\" endpoint should be called,\n   *\twhich sets customer's isVerifiedEmail field to true.\n   *\n   */\n  public emailToken(): ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  public emailConfirm(): ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  public password(): ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public passwordReset(): ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  /**\n   *\tThe following workflow can be used to reset the customer's password:\n   *\n   *\t* Create a password reset token and send it embedded in a link to the customer.\n   *\t* When the customer clicks on the link, the customer is retrieved with the token.\n   *\t* The customer enters a new password and the \"reset customer's password\" endpoint is called.\n   *\n   */\n  public passwordToken(): ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery customers\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerPagedQueryResponse> {\n    return new ApiRequest<CustomerPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreates a customer in a specific Store. The {storeKey} path parameter maps to a Store's key.\n   *\tWhen using this endpoint, if omitted,\n   *\tthe customer's stores field is set to the store specified in the path parameter.\n   *\tIf an anonymous cart is passed in as when using this method,\n   *\tthen the cart is assigned to the created customer and the version number of the Cart increases.\n   *\tIf the ID of an anonymous session is given, all carts and orders will be assigned to the created customer and\n   *\tthe store specified. If you pass in a cart with a store field specified,\n   *\tthe store field must reference the same store specified in the {storeKey} path parameter.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CustomerDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerSignInResult> {\n    return new ApiRequest<CustomerSignInResult>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerSignin, CustomerSignInResult } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tAuthenticate Customer (Sign In) in store\n   */\n  public post(methodArgs: {\n    body: CustomerSignin\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerSignInResult> {\n    return new ApiRequest<CustomerSignInResult>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/login',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart } from '../../models/cart'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public get(methodArgs?: {\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/active-cart',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, CartUpdate } from '../../models/cart'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Cart by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Cart by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: CartUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Cart by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Cart, CartPagedQueryResponse } from '../../models/cart'\nimport { MyCartDraft } from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder } from './by-project-key-in-store-key-by-store-key-me-carts-by-id-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery carts\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartPagedQueryResponse> {\n    return new ApiRequest<CartPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate Cart\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyCartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Cart> {\n    return new ApiRequest<Cart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Order } from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Order by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyOrderFromCartDraft } from '../../models/me'\nimport { Order, OrderPagedQueryResponse } from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder } from './by-project-key-in-store-key-by-store-key-me-orders-by-id-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery orders\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderPagedQueryResponse> {\n    return new ApiRequest<OrderPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate Order\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyOrderFromCartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder } from '../active-cart/by-project-key-in-store-key-by-store-key-me-active-cart-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder } from '../carts/by-project-key-in-store-key-by-store-key-me-carts-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder } from '../orders/by-project-key-in-store-key-by-store-key-me-orders-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  public carts(): ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tAn order can be created from a order, usually after a checkout process has been completed.\n   */\n  public orders(): ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public activeCart(): ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Order, OrderUpdate } from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tReturns an order by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\n   *\tIf the order exists in the commercetools project but does not have the store field,\n   *\tor the store field references a different store, this method returns a ResourceNotFound error.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\n   *\tIf the order exists in the commercetools project but does not have the store field,\n   *\tor the store field references a different store, this method returns a ResourceNotFound error.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Order by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Order, OrderUpdate } from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        orderNumber: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tReturns an order by its order number from a specific Store.\n   *\tThe {storeKey} path parameter maps to a Store's key.\n   *\tIf the order exists in the commercetools project but does not have the store field,\n   *\tor the store field references a different store, this method returns a ResourceNotFound error.\n   *\tIn case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\n   *\tit should be provided in URL-encoded format.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\n   *\tIf the order exists in the commercetools project but does not have the store field,\n   *\tor the store field references a different store, this method returns a ResourceNotFound error.\n   *\tIn case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\n   *\tit should be provided in URL-encoded format.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Order by orderNumber\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Order,\n  OrderFromCartDraft,\n  OrderPagedQueryResponse,\n} from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder } from './by-project-key-in-store-key-by-store-key-orders-by-id-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder } from './by-project-key-in-store-key-by-store-key-orders-order-number-by-order-number-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withOrderNumber(childPathArgs: {\n    orderNumber: string\n  }): ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n          ...childPathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQueries orders in a specific Store. The {storeKey} path parameter maps to a Store's key.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderPagedQueryResponse> {\n    return new ApiRequest<OrderPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreates an order from a Cart from a specific Store. The {storeKey} path parameter maps to a Store's key.\n   *\tWhen using this endpoint the orders's store field is always set to the store specified in the path parameter.\n   *\tThe cart must have a shipping address set before creating an order. When using the Platform TaxMode,\n   *\tthe shipping address is used for tax calculation.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderFromCartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ShippingMethodPagedQueryResponse } from '../../models/shipping-method'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public get(methodArgs: {\n    queryArgs: {\n      cartId: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethodPagedQueryResponse> {\n    return new ApiRequest<ShippingMethodPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder } from '../matching-cart/by-project-key-in-store-key-by-store-key-shipping-methods-matching-cart-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet ShippingMethods for a cart in a store\n   */\n  public matchingCart(): ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ShoppingList, ShoppingListUpdate } from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGets a shopping list by ID.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate ShoppingList by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShoppingListUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ShoppingList by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ShoppingList, ShoppingListUpdate } from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGets a shopping list by Key.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate a shopping list found by its Key.\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShoppingListUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ShoppingList by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate:\n          '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ShoppingList,\n  ShoppingListDraft,\n  ShoppingListPagedQueryResponse,\n} from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder } from './by-project-key-in-store-key-by-store-key-shopping-lists-by-id-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder } from './by-project-key-in-store-key-by-store-key-shopping-lists-key-by-key-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder(\n      {\n        pathArgs: {\n          ...this.args.pathArgs,\n          ...childPathArgs,\n        },\n        executeRequest: this.args.executeRequest,\n        baseUri: this.args.baseUri,\n      }\n    )\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery shopping-lists\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingListPagedQueryResponse> {\n    return new ApiRequest<ShoppingListPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate ShoppingList\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShoppingListDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder } from '../carts/by-project-key-in-store-key-by-store-key-carts-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder } from '../customers/by-project-key-in-store-key-by-store-key-customers-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder } from '../login/by-project-key-in-store-key-by-store-key-login-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder } from '../me/by-project-key-in-store-key-by-store-key-me-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder } from '../orders/by-project-key-in-store-key-by-store-key-orders-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder } from '../shipping-methods/by-project-key-in-store-key-by-store-key-shipping-methods-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder } from '../shopping-lists/by-project-key-in-store-key-by-store-key-shopping-lists-request-builder'\n\nexport class ByProjectKeyInStoreKeyByStoreKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        storeKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  public carts(): ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tAn order can be created from a cart, usually after a checkout process has been completed.\n   */\n  public orders(): ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public me(): ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tA customer is a person purchasing products. customers, Orders,\n   *\tComments and Reviews can be associated to a customer.\n   *\n   */\n  public customers(): ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tRetrieves the authenticated customer.\n   */\n  public login(): ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public shippingMethods(): ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tshopping-lists e.g. for wishlist support\n   *\n   */\n  public shoppingLists(): ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { InventoryEntry, InventoryEntryUpdate } from '../../models/inventory'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyInventoryByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet InventoryEntry by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<InventoryEntry> {\n    return new ApiRequest<InventoryEntry>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/inventory/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate InventoryEntry by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: InventoryEntryUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<InventoryEntry> {\n    return new ApiRequest<InventoryEntry>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/inventory/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete InventoryEntry by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<InventoryEntry> {\n    return new ApiRequest<InventoryEntry>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/inventory/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  InventoryEntry,\n  InventoryEntryDraft,\n  InventoryPagedQueryResponse,\n} from '../../models/inventory'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyInventoryByIDRequestBuilder } from './by-project-key-inventory-by-id-request-builder'\n\nexport class ByProjectKeyInventoryRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyInventoryByIDRequestBuilder {\n    return new ByProjectKeyInventoryByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery inventory\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<InventoryPagedQueryResponse> {\n    return new ApiRequest<InventoryPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/inventory',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate InventoryEntry\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: InventoryEntryDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<InventoryEntry> {\n    return new ApiRequest<InventoryEntry>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/inventory',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerSignin, CustomerSignInResult } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyLoginRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tAuthenticate Customer (Sign In). Retrieves the authenticated\n   *\tcustomer (a customer that matches the given email/password pair).\n   *\tIf used with an access token for Anonymous Sessions,\n   *\tall orders and carts belonging to the anonymousId will be assigned to the newly created customer.\n   *\tIf a cart is is returned as part of the CustomerSignInResult,\n   *\tit has been recalculated (It will have up-to-date prices, taxes and discounts,\n   *\tand invalid line items have been removed.).\n   *\n   */\n  public post(methodArgs: {\n    body: CustomerSignin\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerSignInResult> {\n    return new ApiRequest<CustomerSignInResult>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/login',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyCart } from '../../models/me'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeActiveCartRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public get(methodArgs?: {\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCart> {\n    return new ApiRequest<MyCart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/active-cart',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyCart, MyCartUpdate } from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeCartsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet MyCart by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCart> {\n    return new ApiRequest<MyCart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate MyCart by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyCartUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCart> {\n    return new ApiRequest<MyCart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete MyCart by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCart> {\n    return new ApiRequest<MyCart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/me/carts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyCart, MyCartUpdate } from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeCartsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet MyCart by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCart> {\n    return new ApiRequest<MyCart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate MyCart by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyCartUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCart> {\n    return new ApiRequest<MyCart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete MyCart by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCart> {\n    return new ApiRequest<MyCart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/me/carts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CartPagedQueryResponse } from '../../models/cart'\nimport { MyCart, MyCartDraft } from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyMeCartsByIDRequestBuilder } from './by-project-key-me-carts-by-id-request-builder'\nimport { ByProjectKeyMeCartsKeyByKeyRequestBuilder } from './by-project-key-me-carts-key-by-key-request-builder'\n\nexport class ByProjectKeyMeCartsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyMeCartsKeyByKeyRequestBuilder {\n    return new ByProjectKeyMeCartsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyMeCartsByIDRequestBuilder {\n    return new ByProjectKeyMeCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery carts\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CartPagedQueryResponse> {\n    return new ApiRequest<CartPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/carts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate MyCart\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyCartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCart> {\n    return new ApiRequest<MyCart>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/carts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeEmailConfirmRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public post(methodArgs?: {\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<void> {\n    return new ApiRequest<void>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/email/confirm',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerSignInResult } from '../../models/customer'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeLoginRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public post(methodArgs: {\n    body: void\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerSignInResult> {\n    return new ApiRequest<CustomerSignInResult>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/login',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyOrder } from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeOrdersByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet MyOrder by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyOrder> {\n    return new ApiRequest<MyOrder>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/orders/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyOrder, MyOrderFromCartDraft } from '../../models/me'\nimport { OrderPagedQueryResponse } from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyMeOrdersByIDRequestBuilder } from './by-project-key-me-orders-by-id-request-builder'\n\nexport class ByProjectKeyMeOrdersRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyMeOrdersByIDRequestBuilder {\n    return new ByProjectKeyMeOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery orders\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderPagedQueryResponse> {\n    return new ApiRequest<OrderPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/orders',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate MyOrder\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyOrderFromCartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyOrder> {\n    return new ApiRequest<MyOrder>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/orders',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyCustomer } from '../../models/me'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMePasswordResetRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public post(methodArgs?: {\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCustomer> {\n    return new ApiRequest<MyCustomer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/password/reset',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyCustomer } from '../../models/me'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyMePasswordResetRequestBuilder } from '../reset/by-project-key-me-password-reset-request-builder'\n\nexport class ByProjectKeyMePasswordRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public reset(): ByProjectKeyMePasswordResetRequestBuilder {\n    return new ByProjectKeyMePasswordResetRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  public post(methodArgs: {\n    body: void\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCustomer> {\n    return new ApiRequest<MyCustomer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/password',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyPayment, MyPaymentUpdate } from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMePaymentsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet MyPayment by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyPayment> {\n    return new ApiRequest<MyPayment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/payments/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate MyPayment by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyPaymentUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyPayment> {\n    return new ApiRequest<MyPayment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/payments/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete MyPayment by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyPayment> {\n    return new ApiRequest<MyPayment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/me/payments/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyPayment, MyPaymentUpdate } from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMePaymentsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet MyPayment by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyPayment> {\n    return new ApiRequest<MyPayment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/payments/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate MyPayment by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyPaymentUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyPayment> {\n    return new ApiRequest<MyPayment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/payments/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete MyPayment by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyPayment> {\n    return new ApiRequest<MyPayment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/me/payments/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  MyPayment,\n  MyPaymentDraft,\n  MyPaymentPagedQueryResponse,\n} from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyMePaymentsByIDRequestBuilder } from './by-project-key-me-payments-by-id-request-builder'\nimport { ByProjectKeyMePaymentsKeyByKeyRequestBuilder } from './by-project-key-me-payments-key-by-key-request-builder'\n\nexport class ByProjectKeyMePaymentsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyMePaymentsKeyByKeyRequestBuilder {\n    return new ByProjectKeyMePaymentsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyMePaymentsByIDRequestBuilder {\n    return new ByProjectKeyMePaymentsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery payments\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyPaymentPagedQueryResponse> {\n    return new ApiRequest<MyPaymentPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/payments',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate MyPayment\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyPaymentDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyPayment> {\n    return new ApiRequest<MyPayment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/payments',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyShoppingListUpdate } from '../../models/me'\nimport { MyShoppingList } from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeShoppingListsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet MyShoppingList by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyShoppingList> {\n    return new ApiRequest<MyShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate MyShoppingList by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyShoppingListUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyShoppingList> {\n    return new ApiRequest<MyShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete MyShoppingList by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyShoppingList> {\n    return new ApiRequest<MyShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyShoppingListUpdate } from '../../models/me'\nimport { MyShoppingList } from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet MyShoppingList by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyShoppingList> {\n    return new ApiRequest<MyShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate MyShoppingList by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyShoppingListUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyShoppingList> {\n    return new ApiRequest<MyShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete MyShoppingList by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyShoppingList> {\n    return new ApiRequest<MyShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyShoppingListDraft } from '../../models/me'\nimport {\n  MyShoppingList,\n  ShoppingListPagedQueryResponse,\n} from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyMeShoppingListsByIDRequestBuilder } from './by-project-key-me-shopping-lists-by-id-request-builder'\nimport { ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder } from './by-project-key-me-shopping-lists-key-by-key-request-builder'\n\nexport class ByProjectKeyMeShoppingListsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyMeShoppingListsByIDRequestBuilder {\n    return new ByProjectKeyMeShoppingListsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder {\n    return new ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery shopping-lists\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingListPagedQueryResponse> {\n    return new ApiRequest<ShoppingListPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me/shopping-lists',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate MyShoppingList\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: MyShoppingListDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyShoppingList> {\n    return new ApiRequest<MyShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/shopping-lists',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { CustomerSignInResult } from '../../models/customer'\nimport { MyCustomerDraft } from '../../models/me'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMeSignupRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public post(methodArgs: {\n    body: MyCustomerDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<CustomerSignInResult> {\n    return new ApiRequest<CustomerSignInResult>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me/signup',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MyCustomer, MyCustomerUpdate } from '../../models/me'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyMeActiveCartRequestBuilder } from '../active-cart/by-project-key-me-active-cart-request-builder'\nimport { ByProjectKeyMeCartsRequestBuilder } from '../carts/by-project-key-me-carts-request-builder'\nimport { ByProjectKeyMeEmailConfirmRequestBuilder } from '../confirm/by-project-key-me-email-confirm-request-builder'\nimport { ByProjectKeyMeLoginRequestBuilder } from '../login/by-project-key-me-login-request-builder'\nimport { ByProjectKeyMeOrdersRequestBuilder } from '../orders/by-project-key-me-orders-request-builder'\nimport { ByProjectKeyMePasswordRequestBuilder } from '../password/by-project-key-me-password-request-builder'\nimport { ByProjectKeyMePaymentsRequestBuilder } from '../payments/by-project-key-me-payments-request-builder'\nimport { ByProjectKeyMeShoppingListsRequestBuilder } from '../shopping-lists/by-project-key-me-shopping-lists-request-builder'\nimport { ByProjectKeyMeSignupRequestBuilder } from '../signup/by-project-key-me-signup-request-builder'\n\nexport class ByProjectKeyMeRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public emailConfirm(): ByProjectKeyMeEmailConfirmRequestBuilder {\n    return new ByProjectKeyMeEmailConfirmRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public password(): ByProjectKeyMePasswordRequestBuilder {\n    return new ByProjectKeyMePasswordRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public signup(): ByProjectKeyMeSignupRequestBuilder {\n    return new ByProjectKeyMeSignupRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public login(): ByProjectKeyMeLoginRequestBuilder {\n    return new ByProjectKeyMeLoginRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public activeCart(): ByProjectKeyMeActiveCartRequestBuilder {\n    return new ByProjectKeyMeActiveCartRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  public carts(): ByProjectKeyMeCartsRequestBuilder {\n    return new ByProjectKeyMeCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tAn order can be created from a cart, usually after a checkout process has been completed.\n   */\n  public orders(): ByProjectKeyMeOrdersRequestBuilder {\n    return new ByProjectKeyMeOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tThe My Payments endpoint creates and provides access to payments scoped to a specific user.\n   */\n  public payments(): ByProjectKeyMePaymentsRequestBuilder {\n    return new ByProjectKeyMePaymentsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tThe My Shopping Lists endpoint creates and provides access to shopping lists scoped to a specific user.\n   */\n  public shoppingLists(): ByProjectKeyMeShoppingListsRequestBuilder {\n    return new ByProjectKeyMeShoppingListsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  public get(methodArgs?: {\n    queryArgs?: {\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      expand?: string | string[]\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCustomer> {\n    return new ApiRequest<MyCustomer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/me',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate my customer\n   */\n  public post(methodArgs: {\n    body: MyCustomerUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCustomer> {\n    return new ApiRequest<MyCustomer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/me',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete my Customer\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MyCustomer> {\n    return new ApiRequest<MyCustomer>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/me',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Message } from '../../models/message'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyMessagesByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Message by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Message> {\n    return new ApiRequest<Message>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/messages/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { MessagePagedQueryResponse } from '../../models/message'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyMessagesByIDRequestBuilder } from './by-project-key-messages-by-id-request-builder'\n\nexport class ByProjectKeyMessagesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyMessagesByIDRequestBuilder {\n    return new ByProjectKeyMessagesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery messages\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<MessagePagedQueryResponse> {\n    return new ApiRequest<MessagePagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/messages',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { OrderEditApply } from '../../models/order-edit'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyOrdersEditsByIDApplyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public post(methodArgs: {\n    body: OrderEditApply\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<void> {\n    return new ApiRequest<void>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/orders/edits/{ID}/apply',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { OrderEdit, OrderEditUpdate } from '../../models/order-edit'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyOrdersEditsByIDApplyRequestBuilder } from '../apply/by-project-key-orders-edits-by-id-apply-request-builder'\n\nexport class ByProjectKeyOrdersEditsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public apply(): ByProjectKeyOrdersEditsByIDApplyRequestBuilder {\n    return new ByProjectKeyOrdersEditsByIDApplyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tGet OrderEdit by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderEdit> {\n    return new ApiRequest<OrderEdit>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/orders/edits/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate OrderEdit by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderEditUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderEdit> {\n    return new ApiRequest<OrderEdit>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/orders/edits/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete OrderEdit by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderEdit> {\n    return new ApiRequest<OrderEdit>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/orders/edits/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { OrderEdit, OrderEditUpdate } from '../../models/order-edit'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyOrdersEditsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet OrderEdit by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderEdit> {\n    return new ApiRequest<OrderEdit>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/orders/edits/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate OrderEdit by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderEditUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderEdit> {\n    return new ApiRequest<OrderEdit>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/orders/edits/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete OrderEdit by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderEdit> {\n    return new ApiRequest<OrderEdit>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/orders/edits/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  OrderEdit,\n  OrderEditDraft,\n  OrderEditPagedQueryResponse,\n} from '../../models/order-edit'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyOrdersEditsByIDRequestBuilder } from './by-project-key-orders-edits-by-id-request-builder'\nimport { ByProjectKeyOrdersEditsKeyByKeyRequestBuilder } from './by-project-key-orders-edits-key-by-key-request-builder'\n\nexport class ByProjectKeyOrdersEditsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyOrdersEditsKeyByKeyRequestBuilder {\n    return new ByProjectKeyOrdersEditsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyOrdersEditsByIDRequestBuilder {\n    return new ByProjectKeyOrdersEditsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery edits\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderEditPagedQueryResponse> {\n    return new ApiRequest<OrderEditPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/orders/edits',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate OrderEdit\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderEditDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderEdit> {\n    return new ApiRequest<OrderEdit>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/orders/edits',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Order, OrderImportDraft } from '../../models/order'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyOrdersImportRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tCreate an Order by Import\n   */\n  public post(methodArgs: {\n    body: OrderImportDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/orders/import',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Order, OrderUpdate } from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyOrdersByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Order by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/orders/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Order by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/orders/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Order by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/orders/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Order, OrderUpdate } from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        orderNumber: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tIn case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\n   *\tit should be provided in URL-encoded format.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Order by orderNumber\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Order by orderNumber\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Order,\n  OrderFromCartDraft,\n  OrderPagedQueryResponse,\n} from '../../models/order'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyOrdersEditsRequestBuilder } from '../edits/by-project-key-orders-edits-request-builder'\nimport { ByProjectKeyOrdersImportRequestBuilder } from '../import/by-project-key-orders-import-request-builder'\nimport { ByProjectKeyOrdersByIDRequestBuilder } from './by-project-key-orders-by-id-request-builder'\nimport { ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder } from './by-project-key-orders-order-number-by-order-number-request-builder'\n\nexport class ByProjectKeyOrdersRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public importOrder(): ByProjectKeyOrdersImportRequestBuilder {\n    return new ByProjectKeyOrdersImportRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withOrderNumber(childPathArgs: {\n    orderNumber: string\n  }): ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder {\n    return new ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tOrderEdit are containers for financial changes after an Order has been placed.\n   */\n  public edits(): ByProjectKeyOrdersEditsRequestBuilder {\n    return new ByProjectKeyOrdersEditsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyOrdersByIDRequestBuilder {\n    return new ByProjectKeyOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery orders\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<OrderPagedQueryResponse> {\n    return new ApiRequest<OrderPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/orders',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreates an order from a Cart.\n   *\tThe cart must have a shipping address set before creating an order.\n   *\tWhen using the Platform TaxMode, the shipping address is used for tax calculation.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: OrderFromCartDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Order> {\n    return new ApiRequest<Order>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/orders',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Payment, PaymentUpdate } from '../../models/payment'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyPaymentsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Payment by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Payment> {\n    return new ApiRequest<Payment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/payments/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Payment by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: PaymentUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Payment> {\n    return new ApiRequest<Payment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/payments/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Payment by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Payment> {\n    return new ApiRequest<Payment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/payments/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Payment, PaymentUpdate } from '../../models/payment'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyPaymentsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Payment by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Payment> {\n    return new ApiRequest<Payment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/payments/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Payment by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: PaymentUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Payment> {\n    return new ApiRequest<Payment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/payments/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Payment by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Payment> {\n    return new ApiRequest<Payment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/payments/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Payment,\n  PaymentDraft,\n  PaymentPagedQueryResponse,\n} from '../../models/payment'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyPaymentsByIDRequestBuilder } from './by-project-key-payments-by-id-request-builder'\nimport { ByProjectKeyPaymentsKeyByKeyRequestBuilder } from './by-project-key-payments-key-by-key-request-builder'\n\nexport class ByProjectKeyPaymentsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyPaymentsKeyByKeyRequestBuilder {\n    return new ByProjectKeyPaymentsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyPaymentsByIDRequestBuilder {\n    return new ByProjectKeyPaymentsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery payments\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<PaymentPagedQueryResponse> {\n    return new ApiRequest<PaymentPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/payments',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tTo create a payment object a payment draft object has to be given with the request.\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: PaymentDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Payment> {\n    return new ApiRequest<Payment>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/payments',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ProductDiscount,\n  ProductDiscountMatchQuery,\n} from '../../models/product-discount'\nimport { executeRequest } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductDiscountsMatchingRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public post(methodArgs: {\n    body: ProductDiscountMatchQuery\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscount> {\n    return new ApiRequest<ProductDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/product-discounts/matching',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ProductDiscount,\n  ProductDiscountUpdate,\n} from '../../models/product-discount'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductDiscountsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet ProductDiscount by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscount> {\n    return new ApiRequest<ProductDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-discounts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate ProductDiscount by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductDiscountUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscount> {\n    return new ApiRequest<ProductDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/product-discounts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ProductDiscount by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscount> {\n    return new ApiRequest<ProductDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/product-discounts/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ProductDiscount,\n  ProductDiscountUpdate,\n} from '../../models/product-discount'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductDiscountsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet ProductDiscount by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscount> {\n    return new ApiRequest<ProductDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-discounts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate ProductDiscount by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductDiscountUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscount> {\n    return new ApiRequest<ProductDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/product-discounts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ProductDiscount by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscount> {\n    return new ApiRequest<ProductDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/product-discounts/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ProductDiscount,\n  ProductDiscountDraft,\n  ProductDiscountPagedQueryResponse,\n} from '../../models/product-discount'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyProductDiscountsMatchingRequestBuilder } from '../matching/by-project-key-product-discounts-matching-request-builder'\nimport { ByProjectKeyProductDiscountsByIDRequestBuilder } from './by-project-key-product-discounts-by-id-request-builder'\nimport { ByProjectKeyProductDiscountsKeyByKeyRequestBuilder } from './by-project-key-product-discounts-key-by-key-request-builder'\n\nexport class ByProjectKeyProductDiscountsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public matching(): ByProjectKeyProductDiscountsMatchingRequestBuilder {\n    return new ByProjectKeyProductDiscountsMatchingRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyProductDiscountsKeyByKeyRequestBuilder {\n    return new ByProjectKeyProductDiscountsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyProductDiscountsByIDRequestBuilder {\n    return new ByProjectKeyProductDiscountsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery product-discounts\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscountPagedQueryResponse> {\n    return new ApiRequest<ProductDiscountPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-discounts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate ProductDiscount\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductDiscountDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductDiscount> {\n    return new ApiRequest<ProductDiscount>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/product-discounts',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ProductProjectionPagedSearchResponse } from '../../models/product'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductProjectionsSearchRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tSearch Product Projection\n   */\n  public post(methodArgs: {\n    body: string\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<void> {\n    return new ApiRequest<void>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/product-projections/search',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tSearch Product Projection\n   */\n  public get(methodArgs: {\n    queryArgs: {\n      fuzzy?: boolean\n      fuzzyLevel?: number\n      markMatchingVariants: boolean\n      staged?: boolean\n      filter?: string | string[]\n      'filter.facets'?: string | string[]\n      'filter.query'?: string | string[]\n      facet?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductProjectionPagedSearchResponse> {\n    return new ApiRequest<ProductProjectionPagedSearchResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-projections/search',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductProjectionsSuggestRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public get(methodArgs?: {\n    queryArgs?: {\n      fuzzy?: boolean\n      staged?: boolean\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<any> {\n    return new ApiRequest<any>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-projections/suggest',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ProductProjection } from '../../models/product'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductProjectionsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGets the current or staged representation of a product in a catalog by ID.\n   *\tWhen used with an API client that has the view_published_products:{projectKey} scope,\n   *\tthis endpoint only returns published (current) product projections.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      staged?: boolean\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductProjection> {\n    return new ApiRequest<ProductProjection>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-projections/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ProductProjection } from '../../models/product'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductProjectionsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGets the current or staged representation of a product found by Key.\n   *\tWhen used with an API client that has the view_published_products:{projectKey} scope,\n   *\tthis endpoint only returns published (current) product projections.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      staged?: boolean\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductProjection> {\n    return new ApiRequest<ProductProjection>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-projections/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ProductProjectionPagedQueryResponse } from '../../models/product'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyProductProjectionsSearchRequestBuilder } from '../search/by-project-key-product-projections-search-request-builder'\nimport { ByProjectKeyProductProjectionsSuggestRequestBuilder } from '../suggest/by-project-key-product-projections-suggest-request-builder'\nimport { ByProjectKeyProductProjectionsByIDRequestBuilder } from './by-project-key-product-projections-by-id-request-builder'\nimport { ByProjectKeyProductProjectionsKeyByKeyRequestBuilder } from './by-project-key-product-projections-key-by-key-request-builder'\n\nexport class ByProjectKeyProductProjectionsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tThis endpoint provides high performance search queries over ProductProjections. The query result contains the\n   *\tProductProjections for which at least one ProductVariant matches the search query. This means that variants can\n   *\tbe included in the result also for which the search query does not match. To determine which ProductVariants match\n   *\tthe search query, the returned ProductProjections include the additional field isMatchingVariant.\n   *\n   */\n  public search(): ByProjectKeyProductProjectionsSearchRequestBuilder {\n    return new ByProjectKeyProductProjectionsSearchRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tThe source of data for suggestions is the searchKeyword field in a product\n   */\n  public suggest(): ByProjectKeyProductProjectionsSuggestRequestBuilder {\n    return new ByProjectKeyProductProjectionsSuggestRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyProductProjectionsKeyByKeyRequestBuilder {\n    return new ByProjectKeyProductProjectionsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyProductProjectionsByIDRequestBuilder {\n    return new ByProjectKeyProductProjectionsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tYou can use the product projections query endpoint to get the current or staged representations of Products.\n   *\tWhen used with an API client that has the view_published_products:{projectKey} scope,\n   *\tthis endpoint only returns published (current) product projections.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      staged?: boolean\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductProjectionPagedQueryResponse> {\n    return new ApiRequest<ProductProjectionPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-projections',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ProductType, ProductTypeUpdate } from '../../models/product-type'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductTypesByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet ProductType by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductType> {\n    return new ApiRequest<ProductType>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-types/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate ProductType by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductTypeUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductType> {\n    return new ApiRequest<ProductType>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/product-types/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ProductType by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductType> {\n    return new ApiRequest<ProductType>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/product-types/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ProductType, ProductTypeUpdate } from '../../models/product-type'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductTypesKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet ProductType by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductType> {\n    return new ApiRequest<ProductType>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-types/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate ProductType by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductTypeUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductType> {\n    return new ApiRequest<ProductType>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/product-types/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ProductType by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductType> {\n    return new ApiRequest<ProductType>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/product-types/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ProductType,\n  ProductTypeDraft,\n  ProductTypePagedQueryResponse,\n} from '../../models/product-type'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyProductTypesByIDRequestBuilder } from './by-project-key-product-types-by-id-request-builder'\nimport { ByProjectKeyProductTypesKeyByKeyRequestBuilder } from './by-project-key-product-types-key-by-key-request-builder'\n\nexport class ByProjectKeyProductTypesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyProductTypesKeyByKeyRequestBuilder {\n    return new ByProjectKeyProductTypesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyProductTypesByIDRequestBuilder {\n    return new ByProjectKeyProductTypesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery product-types\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductTypePagedQueryResponse> {\n    return new ApiRequest<ProductTypePagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/product-types',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate ProductType\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductTypeDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductType> {\n    return new ApiRequest<ProductType>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/product-types',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Product } from '../../models/product'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductsByIDImagesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tUploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      filename?: string\n      variant?: number\n      sku?: string\n      staged?: boolean\n      [key: string]: QueryParam\n    }\n    body: Buffer\n    headers: {\n      'Content-Type': 'image/jpeg' | 'image/png' | 'image/gif'\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Product> {\n    return new ApiRequest<Product>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/products/{ID}/images',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Product, ProductUpdate } from '../../models/product'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyProductsByIDImagesRequestBuilder } from '../images/by-project-key-products-by-id-images-request-builder'\n\nexport class ByProjectKeyProductsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public images(): ByProjectKeyProductsByIDImagesRequestBuilder {\n    return new ByProjectKeyProductsByIDImagesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tGets the full representation of a product by ID.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Product> {\n    return new ApiRequest<Product>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/products/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Product by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Product> {\n    return new ApiRequest<Product>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/products/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Product by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Product> {\n    return new ApiRequest<Product>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/products/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Product, ProductUpdate } from '../../models/product'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyProductsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGets the full representation of a product by Key.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Product> {\n    return new ApiRequest<Product>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/products/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Product by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Product> {\n    return new ApiRequest<Product>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/products/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Product by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Product> {\n    return new ApiRequest<Product>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/products/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Product,\n  ProductDraft,\n  ProductPagedQueryResponse,\n} from '../../models/product'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyProductsByIDRequestBuilder } from './by-project-key-products-by-id-request-builder'\nimport { ByProjectKeyProductsKeyByKeyRequestBuilder } from './by-project-key-products-key-by-key-request-builder'\n\nexport class ByProjectKeyProductsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyProductsKeyByKeyRequestBuilder {\n    return new ByProjectKeyProductsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyProductsByIDRequestBuilder {\n    return new ByProjectKeyProductsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tYou can use the query endpoint to get the full representations of products.\n   *\tREMARK: We suggest to use the performance optimized search endpoint which has a bunch functionalities,\n   *\tthe query API lacks like sorting on custom attributes, etc.\n   *\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ProductPagedQueryResponse> {\n    return new ApiRequest<ProductPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/products',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tTo create a new product, send a representation that is going to become the initial staged representation\n   *\tof the new product in the master catalog. If price selection query parameters are provided,\n   *\tthe selected prices will be added to the response.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      priceCurrency?: string\n      priceCountry?: string\n      priceCustomerGroup?: string\n      priceChannel?: string\n      localeProjection?: string\n      storeProjection?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ProductDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Product> {\n    return new ApiRequest<Product>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/products',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Review, ReviewUpdate } from '../../models/review'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyReviewsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Review by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Review> {\n    return new ApiRequest<Review>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/reviews/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Review by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ReviewUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Review> {\n    return new ApiRequest<Review>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/reviews/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Review by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Review> {\n    return new ApiRequest<Review>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/reviews/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Review, ReviewUpdate } from '../../models/review'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyReviewsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Review by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Review> {\n    return new ApiRequest<Review>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/reviews/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Review by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ReviewUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Review> {\n    return new ApiRequest<Review>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/reviews/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Review by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Review> {\n    return new ApiRequest<Review>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/reviews/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Review,\n  ReviewDraft,\n  ReviewPagedQueryResponse,\n} from '../../models/review'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyReviewsByIDRequestBuilder } from './by-project-key-reviews-by-id-request-builder'\nimport { ByProjectKeyReviewsKeyByKeyRequestBuilder } from './by-project-key-reviews-key-by-key-request-builder'\n\nexport class ByProjectKeyReviewsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyReviewsKeyByKeyRequestBuilder {\n    return new ByProjectKeyReviewsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyReviewsByIDRequestBuilder {\n    return new ByProjectKeyReviewsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery reviews\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ReviewPagedQueryResponse> {\n    return new ApiRequest<ReviewPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/reviews',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate Review\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ReviewDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Review> {\n    return new ApiRequest<Review>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/reviews',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ShippingMethodPagedQueryResponse } from '../../models/shipping-method'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyShippingMethodsMatchingCartRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public get(methodArgs: {\n    queryArgs: {\n      cartId: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethodPagedQueryResponse> {\n    return new ApiRequest<ShippingMethodPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shipping-methods/matching-cart',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ShippingMethodPagedQueryResponse } from '../../models/shipping-method'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyShippingMethodsMatchingLocationRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public get(methodArgs: {\n    queryArgs: {\n      country: string\n      state?: string\n      currency?: string\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethodPagedQueryResponse> {\n    return new ApiRequest<ShippingMethodPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shipping-methods/matching-location',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ShippingMethodPagedQueryResponse } from '../../models/shipping-method'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public get(methodArgs: {\n    queryArgs: {\n      orderEditId: string\n      country: string\n      state?: string\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethodPagedQueryResponse> {\n    return new ApiRequest<ShippingMethodPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shipping-methods/matching-orderedit',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ShippingMethod,\n  ShippingMethodUpdate,\n} from '../../models/shipping-method'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyShippingMethodsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet ShippingMethod by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethod> {\n    return new ApiRequest<ShippingMethod>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shipping-methods/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate ShippingMethod by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShippingMethodUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethod> {\n    return new ApiRequest<ShippingMethod>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/shipping-methods/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ShippingMethod by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethod> {\n    return new ApiRequest<ShippingMethod>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/shipping-methods/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ShippingMethod,\n  ShippingMethodUpdate,\n} from '../../models/shipping-method'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyShippingMethodsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet ShippingMethod by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethod> {\n    return new ApiRequest<ShippingMethod>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shipping-methods/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate ShippingMethod by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShippingMethodUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethod> {\n    return new ApiRequest<ShippingMethod>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/shipping-methods/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ShippingMethod by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethod> {\n    return new ApiRequest<ShippingMethod>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/shipping-methods/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ShippingMethod,\n  ShippingMethodDraft,\n  ShippingMethodPagedQueryResponse,\n} from '../../models/shipping-method'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyShippingMethodsMatchingCartRequestBuilder } from '../matching-cart/by-project-key-shipping-methods-matching-cart-request-builder'\nimport { ByProjectKeyShippingMethodsMatchingLocationRequestBuilder } from '../matching-location/by-project-key-shipping-methods-matching-location-request-builder'\nimport { ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder } from '../matching-orderedit/by-project-key-shipping-methods-matching-orderedit-request-builder'\nimport { ByProjectKeyShippingMethodsByIDRequestBuilder } from './by-project-key-shipping-methods-by-id-request-builder'\nimport { ByProjectKeyShippingMethodsKeyByKeyRequestBuilder } from './by-project-key-shipping-methods-key-by-key-request-builder'\n\nexport class ByProjectKeyShippingMethodsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyShippingMethodsKeyByKeyRequestBuilder {\n    return new ByProjectKeyShippingMethodsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tGet ShippingMethods for a cart\n   */\n  public matchingCart(): ByProjectKeyShippingMethodsMatchingCartRequestBuilder {\n    return new ByProjectKeyShippingMethodsMatchingCartRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tGet ShippingMethods for an order edit\n   */\n  public matchingOrderedit(): ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder {\n    return new ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tGet ShippingMethods for a location\n   */\n  public matchingLocation(): ByProjectKeyShippingMethodsMatchingLocationRequestBuilder {\n    return new ByProjectKeyShippingMethodsMatchingLocationRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyShippingMethodsByIDRequestBuilder {\n    return new ByProjectKeyShippingMethodsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery shipping-methods\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethodPagedQueryResponse> {\n    return new ApiRequest<ShippingMethodPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shipping-methods',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate ShippingMethod\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShippingMethodDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShippingMethod> {\n    return new ApiRequest<ShippingMethod>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/shipping-methods',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ShoppingList, ShoppingListUpdate } from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyShoppingListsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGets a shopping list by ID.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate ShoppingList by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShoppingListUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ShoppingList by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/shopping-lists/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { ShoppingList, ShoppingListUpdate } from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyShoppingListsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGets a shopping list by Key.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate a shopping list found by its Key.\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShoppingListUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete ShoppingList by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      dataErasure?: boolean\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/shopping-lists/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  ShoppingList,\n  ShoppingListDraft,\n  ShoppingListPagedQueryResponse,\n} from '../../models/shopping-list'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyShoppingListsByIDRequestBuilder } from './by-project-key-shopping-lists-by-id-request-builder'\nimport { ByProjectKeyShoppingListsKeyByKeyRequestBuilder } from './by-project-key-shopping-lists-key-by-key-request-builder'\n\nexport class ByProjectKeyShoppingListsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyShoppingListsKeyByKeyRequestBuilder {\n    return new ByProjectKeyShoppingListsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyShoppingListsByIDRequestBuilder {\n    return new ByProjectKeyShoppingListsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery shopping-lists\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingListPagedQueryResponse> {\n    return new ApiRequest<ShoppingListPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/shopping-lists',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate ShoppingList\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ShoppingListDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ShoppingList> {\n    return new ApiRequest<ShoppingList>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/shopping-lists',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { State, StateUpdate } from '../../models/state'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyStatesByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet State by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<State> {\n    return new ApiRequest<State>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/states/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate State by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: StateUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<State> {\n    return new ApiRequest<State>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/states/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete State by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<State> {\n    return new ApiRequest<State>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/states/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { State, StateUpdate } from '../../models/state'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyStatesKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet State by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<State> {\n    return new ApiRequest<State>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/states/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate State by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: StateUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<State> {\n    return new ApiRequest<State>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/states/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete State by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<State> {\n    return new ApiRequest<State>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/states/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { State, StateDraft, StatePagedQueryResponse } from '../../models/state'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyStatesByIDRequestBuilder } from './by-project-key-states-by-id-request-builder'\nimport { ByProjectKeyStatesKeyByKeyRequestBuilder } from './by-project-key-states-key-by-key-request-builder'\n\nexport class ByProjectKeyStatesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyStatesKeyByKeyRequestBuilder {\n    return new ByProjectKeyStatesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyStatesByIDRequestBuilder {\n    return new ByProjectKeyStatesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery states\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<StatePagedQueryResponse> {\n    return new ApiRequest<StatePagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/states',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate State\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: StateDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<State> {\n    return new ApiRequest<State>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/states',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Store, StoreUpdate } from '../../models/store'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyStoresByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Store by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Store> {\n    return new ApiRequest<Store>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/stores/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Store by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: StoreUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Store> {\n    return new ApiRequest<Store>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/stores/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Store by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Store> {\n    return new ApiRequest<Store>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/stores/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Store, StoreUpdate } from '../../models/store'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyStoresKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Store by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Store> {\n    return new ApiRequest<Store>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/stores/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Store by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: StoreUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Store> {\n    return new ApiRequest<Store>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/stores/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Store by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Store> {\n    return new ApiRequest<Store>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/stores/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Store, StoreDraft, StorePagedQueryResponse } from '../../models/store'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyStoresByIDRequestBuilder } from './by-project-key-stores-by-id-request-builder'\nimport { ByProjectKeyStoresKeyByKeyRequestBuilder } from './by-project-key-stores-key-by-key-request-builder'\n\nexport class ByProjectKeyStoresRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyStoresKeyByKeyRequestBuilder {\n    return new ByProjectKeyStoresKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyStoresByIDRequestBuilder {\n    return new ByProjectKeyStoresByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery stores\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<StorePagedQueryResponse> {\n    return new ApiRequest<StorePagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/stores',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate Store\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: StoreDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Store> {\n    return new ApiRequest<Store>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/stores',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Subscription, SubscriptionUpdate } from '../../models/subscription'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeySubscriptionsByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tRetrieves the representation of a subscription by its id.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Subscription> {\n    return new ApiRequest<Subscription>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/subscriptions/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Subscription by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: SubscriptionUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Subscription> {\n    return new ApiRequest<Subscription>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/subscriptions/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Subscription by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Subscription> {\n    return new ApiRequest<Subscription>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/subscriptions/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Subscription, SubscriptionUpdate } from '../../models/subscription'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeySubscriptionsKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tRetrieves the representation of a subscription by its key.\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Subscription> {\n    return new ApiRequest<Subscription>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/subscriptions/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Subscription by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: SubscriptionUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Subscription> {\n    return new ApiRequest<Subscription>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/subscriptions/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Subscription by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Subscription> {\n    return new ApiRequest<Subscription>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/subscriptions/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  Subscription,\n  SubscriptionDraft,\n  SubscriptionPagedQueryResponse,\n} from '../../models/subscription'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeySubscriptionsByIDRequestBuilder } from './by-project-key-subscriptions-by-id-request-builder'\nimport { ByProjectKeySubscriptionsKeyByKeyRequestBuilder } from './by-project-key-subscriptions-key-by-key-request-builder'\n\nexport class ByProjectKeySubscriptionsRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeySubscriptionsKeyByKeyRequestBuilder {\n    return new ByProjectKeySubscriptionsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeySubscriptionsByIDRequestBuilder {\n    return new ByProjectKeySubscriptionsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery subscriptions\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<SubscriptionPagedQueryResponse> {\n    return new ApiRequest<SubscriptionPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/subscriptions',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tThe creation of a Subscription is eventually consistent, it may take up to a minute before it becomes fully active.\n   *\tIn order to test that the destination is correctly configured, a test message will be put into the queue.\n   *\tIf the message could not be delivered, the subscription will not be created.\n   *\tThe payload of the test message is a notification of type ResourceCreated for the resourceTypeId subscription.\n   *\tCurrently, a maximum of 25 subscriptions can be created per project.\n   *\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: SubscriptionDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Subscription> {\n    return new ApiRequest<Subscription>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/subscriptions',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { TaxCategory, TaxCategoryUpdate } from '../../models/tax-category'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyTaxCategoriesByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet TaxCategory by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TaxCategory> {\n    return new ApiRequest<TaxCategory>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/tax-categories/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate TaxCategory by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: TaxCategoryUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TaxCategory> {\n    return new ApiRequest<TaxCategory>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/tax-categories/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete TaxCategory by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TaxCategory> {\n    return new ApiRequest<TaxCategory>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/tax-categories/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { TaxCategory, TaxCategoryUpdate } from '../../models/tax-category'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet TaxCategory by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TaxCategory> {\n    return new ApiRequest<TaxCategory>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/tax-categories/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate TaxCategory by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: TaxCategoryUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TaxCategory> {\n    return new ApiRequest<TaxCategory>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/tax-categories/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete TaxCategory by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TaxCategory> {\n    return new ApiRequest<TaxCategory>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/tax-categories/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport {\n  TaxCategory,\n  TaxCategoryDraft,\n  TaxCategoryPagedQueryResponse,\n} from '../../models/tax-category'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyTaxCategoriesByIDRequestBuilder } from './by-project-key-tax-categories-by-id-request-builder'\nimport { ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder } from './by-project-key-tax-categories-key-by-key-request-builder'\n\nexport class ByProjectKeyTaxCategoriesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder {\n    return new ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyTaxCategoriesByIDRequestBuilder {\n    return new ByProjectKeyTaxCategoriesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery tax-categories\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TaxCategoryPagedQueryResponse> {\n    return new ApiRequest<TaxCategoryPagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/tax-categories',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate TaxCategory\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: TaxCategoryDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TaxCategory> {\n    return new ApiRequest<TaxCategory>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/tax-categories',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Type, TypeUpdate } from '../../models/type'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyTypesByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Type by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Type> {\n    return new ApiRequest<Type>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/types/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Type by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: TypeUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Type> {\n    return new ApiRequest<Type>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/types/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Type by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Type> {\n    return new ApiRequest<Type>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/types/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Type, TypeUpdate } from '../../models/type'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyTypesKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Type by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Type> {\n    return new ApiRequest<Type>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/types/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Type by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: TypeUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Type> {\n    return new ApiRequest<Type>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/types/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Type by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Type> {\n    return new ApiRequest<Type>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/types/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Type, TypeDraft, TypePagedQueryResponse } from '../../models/type'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyTypesByIDRequestBuilder } from './by-project-key-types-by-id-request-builder'\nimport { ByProjectKeyTypesKeyByKeyRequestBuilder } from './by-project-key-types-key-by-key-request-builder'\n\nexport class ByProjectKeyTypesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyTypesKeyByKeyRequestBuilder {\n    return new ByProjectKeyTypesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyTypesByIDRequestBuilder {\n    return new ByProjectKeyTypesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery types\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<TypePagedQueryResponse> {\n    return new ApiRequest<TypePagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/types',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate Type\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: TypeDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Type> {\n    return new ApiRequest<Type>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/types',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Zone, ZoneUpdate } from '../../models/zone'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyZonesByIDRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        ID: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Zone by ID\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Zone> {\n    return new ApiRequest<Zone>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/zones/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Zone by ID\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ZoneUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Zone> {\n    return new ApiRequest<Zone>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/zones/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Zone by ID\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Zone> {\n    return new ApiRequest<Zone>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/zones/{ID}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Zone, ZoneUpdate } from '../../models/zone'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\n\nexport class ByProjectKeyZonesKeyByKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n        key: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tGet Zone by key\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Zone> {\n    return new ApiRequest<Zone>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/zones/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate Zone by key\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ZoneUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Zone> {\n    return new ApiRequest<Zone>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/zones/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tDelete Zone by key\n   */\n  public delete(methodArgs: {\n    queryArgs: {\n      version: number\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Zone> {\n    return new ApiRequest<Zone>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'DELETE',\n        uriTemplate: '/{projectKey}/zones/key={key}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Zone, ZoneDraft, ZonePagedQueryResponse } from '../../models/zone'\nimport { executeRequest, QueryParam } from '../../shared/utils/common-types'\nimport { ApiRequest } from '../../shared/utils/requests-utils'\nimport { ByProjectKeyZonesByIDRequestBuilder } from './by-project-key-zones-by-id-request-builder'\nimport { ByProjectKeyZonesKeyByKeyRequestBuilder } from './by-project-key-zones-key-by-key-request-builder'\n\nexport class ByProjectKeyZonesRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  public withKey(childPathArgs: {\n    key: string\n  }): ByProjectKeyZonesKeyByKeyRequestBuilder {\n    return new ByProjectKeyZonesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public withId(childPathArgs: {\n    ID: string\n  }): ByProjectKeyZonesByIDRequestBuilder {\n    return new ByProjectKeyZonesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tQuery zones\n   */\n  public get(methodArgs?: {\n    queryArgs?: {\n      expand?: string | string[]\n      sort?: string | string[]\n      limit?: number\n      offset?: number\n      withTotal?: boolean\n      where?: string | string[]\n      [key: string]: QueryParam\n    }\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<ZonePagedQueryResponse> {\n    return new ApiRequest<ZonePagedQueryResponse>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}/zones',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tCreate Zone\n   */\n  public post(methodArgs: {\n    queryArgs?: {\n      expand?: string | string[]\n      [key: string]: QueryParam\n    }\n    body: ZoneDraft\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Zone> {\n    return new ApiRequest<Zone>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}/zones',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        queryParams: methodArgs?.queryArgs,\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { Project, ProjectUpdate } from '../models/project'\nimport { executeRequest } from '../shared/utils/common-types'\nimport { ApiRequest } from '../shared/utils/requests-utils'\nimport { ByProjectKeyApiClientsRequestBuilder } from './api-clients/by-project-key-api-clients-request-builder'\nimport { ByProjectKeyCartDiscountsRequestBuilder } from './cart-discounts/by-project-key-cart-discounts-request-builder'\nimport { ByProjectKeyCartsRequestBuilder } from './carts/by-project-key-carts-request-builder'\nimport { ByProjectKeyCategoriesRequestBuilder } from './categories/by-project-key-categories-request-builder'\nimport { ByProjectKeyChannelsRequestBuilder } from './channels/by-project-key-channels-request-builder'\nimport { ByProjectKeyCustomObjectsRequestBuilder } from './custom-objects/by-project-key-custom-objects-request-builder'\nimport { ByProjectKeyCustomerGroupsRequestBuilder } from './customer-groups/by-project-key-customer-groups-request-builder'\nimport { ByProjectKeyCustomersRequestBuilder } from './customers/by-project-key-customers-request-builder'\nimport { ByProjectKeyDiscountCodesRequestBuilder } from './discount-codes/by-project-key-discount-codes-request-builder'\nimport { ByProjectKeyExtensionsRequestBuilder } from './extensions/by-project-key-extensions-request-builder'\nimport { ByProjectKeyGraphqlRequestBuilder } from './graphql/by-project-key-graphql-request-builder'\nimport { ByProjectKeyInStoreKeyByStoreKeyRequestBuilder } from './in-store/by-project-key-in-store-key-by-store-key-request-builder'\nimport { ByProjectKeyInventoryRequestBuilder } from './inventory/by-project-key-inventory-request-builder'\nimport { ByProjectKeyLoginRequestBuilder } from './login/by-project-key-login-request-builder'\nimport { ByProjectKeyMeRequestBuilder } from './me/by-project-key-me-request-builder'\nimport { ByProjectKeyMessagesRequestBuilder } from './messages/by-project-key-messages-request-builder'\nimport { ByProjectKeyOrdersRequestBuilder } from './orders/by-project-key-orders-request-builder'\nimport { ByProjectKeyPaymentsRequestBuilder } from './payments/by-project-key-payments-request-builder'\nimport { ByProjectKeyProductDiscountsRequestBuilder } from './product-discounts/by-project-key-product-discounts-request-builder'\nimport { ByProjectKeyProductProjectionsRequestBuilder } from './product-projections/by-project-key-product-projections-request-builder'\nimport { ByProjectKeyProductTypesRequestBuilder } from './product-types/by-project-key-product-types-request-builder'\nimport { ByProjectKeyProductsRequestBuilder } from './products/by-project-key-products-request-builder'\nimport { ByProjectKeyReviewsRequestBuilder } from './reviews/by-project-key-reviews-request-builder'\nimport { ByProjectKeyShippingMethodsRequestBuilder } from './shipping-methods/by-project-key-shipping-methods-request-builder'\nimport { ByProjectKeyShoppingListsRequestBuilder } from './shopping-lists/by-project-key-shopping-lists-request-builder'\nimport { ByProjectKeyStatesRequestBuilder } from './states/by-project-key-states-request-builder'\nimport { ByProjectKeyStoresRequestBuilder } from './stores/by-project-key-stores-request-builder'\nimport { ByProjectKeySubscriptionsRequestBuilder } from './subscriptions/by-project-key-subscriptions-request-builder'\nimport { ByProjectKeyTaxCategoriesRequestBuilder } from './tax-categories/by-project-key-tax-categories-request-builder'\nimport { ByProjectKeyTypesRequestBuilder } from './types/by-project-key-types-request-builder'\nimport { ByProjectKeyZonesRequestBuilder } from './zones/by-project-key-zones-request-builder'\n\nexport class ByProjectKeyRequestBuilder {\n  constructor(\n    protected readonly args: {\n      pathArgs: {\n        projectKey: string\n      }\n      executeRequest: executeRequest\n      baseUri?: string\n    }\n  ) {}\n  /**\n   *\tCategories are used to organize products in a hierarchical structure.\n   */\n  public categories(): ByProjectKeyCategoriesRequestBuilder {\n    return new ByProjectKeyCategoriesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  public carts(): ByProjectKeyCartsRequestBuilder {\n    return new ByProjectKeyCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tCart discounts are used to change the prices of different elements within a cart.\n   */\n  public cartDiscounts(): ByProjectKeyCartDiscountsRequestBuilder {\n    return new ByProjectKeyCartDiscountsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tChannels represent a source or destination of different entities. They can be used to model warehouses or stores.\n   *\n   */\n  public channels(): ByProjectKeyChannelsRequestBuilder {\n    return new ByProjectKeyChannelsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tA customer is a person purchasing products. customers, Orders, Comments and Reviews can be associated to a customer.\n   *\n   */\n  public customers(): ByProjectKeyCustomersRequestBuilder {\n    return new ByProjectKeyCustomersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tcustomer-groups are used to evaluate products and channels.\n   */\n  public customerGroups(): ByProjectKeyCustomerGroupsRequestBuilder {\n    return new ByProjectKeyCustomerGroupsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tStore custom JSON values.\n   */\n  public customObjects(): ByProjectKeyCustomObjectsRequestBuilder {\n    return new ByProjectKeyCustomObjectsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tDiscount codes can be added to a discount-code to enable certain discount-code discounts.\n   */\n  public discountCodes(): ByProjectKeyDiscountCodesRequestBuilder {\n    return new ByProjectKeyDiscountCodesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tThe commercetools™ platform provides a GraphQL API\n   */\n  public graphql(): ByProjectKeyGraphqlRequestBuilder {\n    return new ByProjectKeyGraphqlRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tInventory allows you to track stock quantities.\n   */\n  public inventory(): ByProjectKeyInventoryRequestBuilder {\n    return new ByProjectKeyInventoryRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tRetrieves the authenticated customer.\n   */\n  public login(): ByProjectKeyLoginRequestBuilder {\n    return new ByProjectKeyLoginRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tA message represents a change or an action performed on a resource (like an Order or a Product).\n   */\n  public messages(): ByProjectKeyMessagesRequestBuilder {\n    return new ByProjectKeyMessagesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tAn order can be created from a order, usually after a checkout process has been completed.\n   */\n  public orders(): ByProjectKeyOrdersRequestBuilder {\n    return new ByProjectKeyOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tPayments hold information about the current state of receiving and/or refunding money\n   */\n  public payments(): ByProjectKeyPaymentsRequestBuilder {\n    return new ByProjectKeyPaymentsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tProducts are the sellable goods in an e-commerce project on CTP. This document explains some design concepts\n   *\tof products on CTP and describes the available HTTP APIs for working with them.\n   *\n   */\n  public products(): ByProjectKeyProductsRequestBuilder {\n    return new ByProjectKeyProductsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tProduct discounts are used to change certain product prices.\n   */\n  public productDiscounts(): ByProjectKeyProductDiscountsRequestBuilder {\n    return new ByProjectKeyProductDiscountsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tA projected representation of a product shows the product with its current or staged data. The current or staged\n   *\trepresentation of a product in a catalog is called a product projection.\n   *\n   */\n  public productProjections(): ByProjectKeyProductProjectionsRequestBuilder {\n    return new ByProjectKeyProductProjectionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tProduct Types are used to describe common characteristics, most importantly common custom attributes,\n   *\tof many concrete products.\n   *\n   */\n  public productTypes(): ByProjectKeyProductTypesRequestBuilder {\n    return new ByProjectKeyProductTypesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tReviews are used to evaluate products and channels.\n   */\n  public reviews(): ByProjectKeyReviewsRequestBuilder {\n    return new ByProjectKeyReviewsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tShipping Methods define where orders can be shipped and what the costs are.\n   */\n  public shippingMethods(): ByProjectKeyShippingMethodsRequestBuilder {\n    return new ByProjectKeyShippingMethodsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tshopping-lists e.g. for wishlist support\n   */\n  public shoppingLists(): ByProjectKeyShoppingListsRequestBuilder {\n    return new ByProjectKeyShoppingListsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tThe commercetools platform allows you to model states of certain objects, such as orders, line items, products,\n   *\treviews, and payments in order to define finite state machines reflecting the business logic you'd like to\n   *\timplement.\n   *\n   */\n  public states(): ByProjectKeyStatesRequestBuilder {\n    return new ByProjectKeyStatesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tSubscriptions allow you to be notified of new messages or changes via a Message Queue of your choice\n   */\n  public subscriptions(): ByProjectKeySubscriptionsRequestBuilder {\n    return new ByProjectKeySubscriptionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tTax Categories define how products are to be taxed in different countries.\n   */\n  public taxCategories(): ByProjectKeyTaxCategoriesRequestBuilder {\n    return new ByProjectKeyTaxCategoriesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tTypes define custom fields that are used to enhance resources as you need.\n   */\n  public types(): ByProjectKeyTypesRequestBuilder {\n    return new ByProjectKeyTypesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tZones allow defining ShippingRates for specific Locations.\n   */\n  public zones(): ByProjectKeyZonesRequestBuilder {\n    return new ByProjectKeyZonesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public me(): ByProjectKeyMeRequestBuilder {\n    return new ByProjectKeyMeRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tExtend the behavior of an API with your business logic\n   */\n  public extensions(): ByProjectKeyExtensionsRequestBuilder {\n    return new ByProjectKeyExtensionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tManage your API Clients via an API. Useful for Infrastructure-as-Code tooling, and regularly rotating API secrets.\n   *\n   */\n  public apiClients(): ByProjectKeyApiClientsRequestBuilder {\n    return new ByProjectKeyApiClientsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  /**\n   *\tStores let you model the context your customers shop in.\n   */\n  public stores(): ByProjectKeyStoresRequestBuilder {\n    return new ByProjectKeyStoresRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n  public inStoreKeyWithStoreKeyValue(childPathArgs: {\n    storeKey: string\n  }): ByProjectKeyInStoreKeyByStoreKeyRequestBuilder {\n    return new ByProjectKeyInStoreKeyByStoreKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs,\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri,\n    })\n  }\n\n  /**\n   *\tThe Endpoint is responding a limited set of information about settings and configuration of the project.\n   *\n   */\n  public get(methodArgs?: {\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Project> {\n    return new ApiRequest<Project>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'GET',\n        uriTemplate: '/{projectKey}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          ...methodArgs?.headers,\n        },\n      },\n      this.args.executeRequest\n    )\n  }\n  /**\n   *\tUpdate project\n   */\n  public post(methodArgs: {\n    body: ProjectUpdate\n    headers?: {\n      [key: string]: string | string[]\n    }\n  }): ApiRequest<Project> {\n    return new ApiRequest<Project>(\n      {\n        baseUri: this.args.baseUri,\n        method: 'POST',\n        uriTemplate: '/{projectKey}',\n        pathVariables: this.args.pathArgs,\n        headers: {\n          'Content-Type': 'application/json',\n          ...methodArgs?.headers,\n        },\n        body: methodArgs?.body,\n      },\n      this.args.executeRequest\n    )\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\nimport { executeRequest } from '../shared/utils/common-types'\nimport { ByProjectKeyRequestBuilder } from './by-project-key-request-builder'\n\nexport class ApiRoot {\n  private executeRequest: executeRequest\n  private baseUri: string\n\n  constructor(args: { executeRequest: executeRequest; baseUri?: string }) {\n    this.executeRequest = args.executeRequest\n    this.baseUri =\n      args.baseUri ?? 'https://api.europe-west1.gcp.commercetools.com'\n  }\n\n  /**\n   *\tThe Project endpoint is used to retrieve certain information from a project.\n   */\n  public withProjectKey(childPathArgs: {\n    projectKey: string\n  }): ByProjectKeyRequestBuilder {\n    return new ByProjectKeyRequestBuilder({\n      pathArgs: {\n        ...childPathArgs,\n      },\n      executeRequest: this.executeRequest,\n      baseUri: this.baseUri,\n    })\n  }\n}\n","/**\n *\n *    Generated file, please do not change!!!\n *    From http://www.vrap.io/ with love\n *\n *                ,d88b.d88b,\n *                88888888888\n *                `Y8888888Y'\n *                  `Y888Y'\n *                    `Y'\n *\n */\n\nimport { ClientRequest, ClientResponse, executeRequest } from './common-types'\n\nexport type Middleware = (\n  request: ClientRequest,\n  executor: executeRequest\n) => Promise<ClientResponse>\n\nexport const createExecutorFromMiddlewares = (\n  executor: executeRequest,\n  midds?: Middleware[]\n) => {\n  if (!midds || midds.length == 0) {\n    return executor\n  }\n  const reduced: Middleware = midds.reduce(reduceMiddleware)\n  return middlewareToExecutor(reduced, executor)\n}\n\nfunction reduceMiddleware(\n  middleware1: Middleware,\n  middleware2: Middleware\n): Middleware {\n  return (request: ClientRequest, executor: executeRequest) =>\n    middleware1(request, middlewareToExecutor(middleware2, executor))\n}\n\nfunction middlewareToExecutor(\n  middleware: Middleware,\n  executor: executeRequest\n): executeRequest {\n  return (request: ClientRequest) => middleware(request, executor)\n}\n","import { ApiRoot } from './../generated/index'\n\nexport function createApiBuilderFromCtpClient(\n  ctpClient: any,\n  baseUri?: string\n): ApiRoot {\n  return new ApiRoot({\n    executeRequest: ctpClient.execute,\n    baseUri: baseUri,\n  })\n}\n"],"names":["isDefined","value","buildRelativeUri","commonRequest","obj","map","result","pathMap","pathVariables","uri","uriTemplate","param","replace","queryParams","Object","keys","reduce","key","Array","isArray","values","filter","length","stringify","ApiRequest","request","requestExecutor","this","clientRequest","execute","ByProjectKeyApiClientsByIDRequestBuilder","args","get","methodArgs","baseUri","method","pathArgs","headers","executeRequest","ByProjectKeyApiClientsRequestBuilder","withId","childPathArgs","queryArgs","post","Content-Type","body","ByProjectKeyCartDiscountsByIDRequestBuilder","ByProjectKeyCartDiscountsKeyByKeyRequestBuilder","ByProjectKeyCartDiscountsRequestBuilder","withKey","ByProjectKeyCartsReplicateRequestBuilder","ByProjectKeyCartsByIDRequestBuilder","ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder","ByProjectKeyCartsKeyByKeyRequestBuilder","ByProjectKeyCartsRequestBuilder","replicate","withCustomerId","ByProjectKeyCategoriesByIDRequestBuilder","ByProjectKeyCategoriesKeyByKeyRequestBuilder","ByProjectKeyCategoriesRequestBuilder","ByProjectKeyChannelsByIDRequestBuilder","ByProjectKeyChannelsRequestBuilder","ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder","ByProjectKeyCustomObjectsByContainerRequestBuilder","ByProjectKeyCustomObjectsRequestBuilder","withContainerAndKey","withContainer","ByProjectKeyCustomerGroupsByIDRequestBuilder","ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder","ByProjectKeyCustomerGroupsRequestBuilder","ByProjectKeyCustomersEmailConfirmRequestBuilder","ByProjectKeyCustomersEmailTokenRequestBuilder","ByProjectKeyCustomersPasswordTokenRequestBuilder","ByProjectKeyCustomersPasswordRequestBuilder","ByProjectKeyCustomersPasswordResetRequestBuilder","ByProjectKeyCustomersByIDRequestBuilder","ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder","ByProjectKeyCustomersKeyByKeyRequestBuilder","ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder","ByProjectKeyCustomersRequestBuilder","withPasswordToken","withEmailToken","emailToken","emailConfirm","password","passwordReset","passwordToken","ByProjectKeyDiscountCodesByIDRequestBuilder","ByProjectKeyDiscountCodesRequestBuilder","ByProjectKeyExtensionsByIDRequestBuilder","ByProjectKeyExtensionsKeyByKeyRequestBuilder","ByProjectKeyExtensionsRequestBuilder","ByProjectKeyGraphqlRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder","carts","orders","activeCart","ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder","withOrderNumber","ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder","matchingCart","ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyRequestBuilder","me","customers","login","shippingMethods","shoppingLists","ByProjectKeyInventoryByIDRequestBuilder","ByProjectKeyInventoryRequestBuilder","ByProjectKeyLoginRequestBuilder","ByProjectKeyMeActiveCartRequestBuilder","ByProjectKeyMeCartsByIDRequestBuilder","ByProjectKeyMeCartsKeyByKeyRequestBuilder","ByProjectKeyMeCartsRequestBuilder","ByProjectKeyMeEmailConfirmRequestBuilder","ByProjectKeyMeLoginRequestBuilder","ByProjectKeyMeOrdersByIDRequestBuilder","ByProjectKeyMeOrdersRequestBuilder","ByProjectKeyMePasswordResetRequestBuilder","ByProjectKeyMePasswordRequestBuilder","reset","ByProjectKeyMePaymentsByIDRequestBuilder","ByProjectKeyMePaymentsKeyByKeyRequestBuilder","ByProjectKeyMePaymentsRequestBuilder","ByProjectKeyMeShoppingListsByIDRequestBuilder","ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder","ByProjectKeyMeShoppingListsRequestBuilder","ByProjectKeyMeSignupRequestBuilder","ByProjectKeyMeRequestBuilder","signup","payments","ByProjectKeyMessagesByIDRequestBuilder","ByProjectKeyMessagesRequestBuilder","ByProjectKeyOrdersEditsByIDApplyRequestBuilder","ByProjectKeyOrdersEditsByIDRequestBuilder","apply","ByProjectKeyOrdersEditsKeyByKeyRequestBuilder","ByProjectKeyOrdersEditsRequestBuilder","ByProjectKeyOrdersImportRequestBuilder","ByProjectKeyOrdersByIDRequestBuilder","ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder","ByProjectKeyOrdersRequestBuilder","importOrder","edits","ByProjectKeyPaymentsByIDRequestBuilder","ByProjectKeyPaymentsKeyByKeyRequestBuilder","ByProjectKeyPaymentsRequestBuilder","ByProjectKeyProductDiscountsMatchingRequestBuilder","ByProjectKeyProductDiscountsByIDRequestBuilder","ByProjectKeyProductDiscountsKeyByKeyRequestBuilder","ByProjectKeyProductDiscountsRequestBuilder","matching","ByProjectKeyProductProjectionsSearchRequestBuilder","ByProjectKeyProductProjectionsSuggestRequestBuilder","ByProjectKeyProductProjectionsByIDRequestBuilder","ByProjectKeyProductProjectionsKeyByKeyRequestBuilder","ByProjectKeyProductProjectionsRequestBuilder","search","suggest","ByProjectKeyProductTypesByIDRequestBuilder","ByProjectKeyProductTypesKeyByKeyRequestBuilder","ByProjectKeyProductTypesRequestBuilder","ByProjectKeyProductsByIDImagesRequestBuilder","ByProjectKeyProductsByIDRequestBuilder","images","ByProjectKeyProductsKeyByKeyRequestBuilder","ByProjectKeyProductsRequestBuilder","ByProjectKeyReviewsByIDRequestBuilder","ByProjectKeyReviewsKeyByKeyRequestBuilder","ByProjectKeyReviewsRequestBuilder","ByProjectKeyShippingMethodsMatchingCartRequestBuilder","ByProjectKeyShippingMethodsMatchingLocationRequestBuilder","ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder","ByProjectKeyShippingMethodsByIDRequestBuilder","ByProjectKeyShippingMethodsKeyByKeyRequestBuilder","ByProjectKeyShippingMethodsRequestBuilder","matchingOrderedit","matchingLocation","ByProjectKeyShoppingListsByIDRequestBuilder","ByProjectKeyShoppingListsKeyByKeyRequestBuilder","ByProjectKeyShoppingListsRequestBuilder","ByProjectKeyStatesByIDRequestBuilder","ByProjectKeyStatesKeyByKeyRequestBuilder","ByProjectKeyStatesRequestBuilder","ByProjectKeyStoresByIDRequestBuilder","ByProjectKeyStoresKeyByKeyRequestBuilder","ByProjectKeyStoresRequestBuilder","ByProjectKeySubscriptionsByIDRequestBuilder","ByProjectKeySubscriptionsKeyByKeyRequestBuilder","ByProjectKeySubscriptionsRequestBuilder","ByProjectKeyTaxCategoriesByIDRequestBuilder","ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder","ByProjectKeyTaxCategoriesRequestBuilder","ByProjectKeyTypesByIDRequestBuilder","ByProjectKeyTypesKeyByKeyRequestBuilder","ByProjectKeyTypesRequestBuilder","ByProjectKeyZonesByIDRequestBuilder","ByProjectKeyZonesKeyByKeyRequestBuilder","ByProjectKeyZonesRequestBuilder","ByProjectKeyRequestBuilder","categories","cartDiscounts","channels","customerGroups","customObjects","discountCodes","graphql","inventory","messages","products","productDiscounts","productProjections","productTypes","reviews","states","subscriptions","taxCategories","types","zones","extensions","apiClients","stores","inStoreKeyWithStoreKeyValue","ApiRoot","withProjectKey","createExecutorFromMiddlewares","executor","midds","middlewareToExecutor","reduceMiddleware","middleware1","middleware2","middleware","createApiBuilderFromCtpClient","ctpClient"],"mappings":"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"}