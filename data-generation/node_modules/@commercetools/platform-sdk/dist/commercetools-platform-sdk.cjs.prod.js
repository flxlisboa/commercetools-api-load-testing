'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var querystring = require('querystring');

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

function isDefined(value) {
  return typeof value !== 'undefined' && value !== null;
}

function cleanObject(obj) {
  return Object.keys(obj).reduce((result, key) => {
    const value = obj[key];

    if (Array.isArray(value)) {
      const values = value.filter(isDefined);

      if (!values.length) {
        return result;
      }

      return { ...result,
        [key]: values
      };
    }

    if (isDefined(value)) {
      return { ...result,
        [key]: value
      };
    }

    return result;
  }, {});
}

function formatQueryString(variableMap) {
  const map = cleanObject(variableMap);
  const result = querystring.stringify(map);

  if (result === '') {
    return '';
  }

  return `?${result}`;
}

function buildRelativeUri(commonRequest) {
  const pathMap = commonRequest.pathVariables;
  var uri = commonRequest.uriTemplate;

  for (const param in pathMap) {
    uri = uri.replace(`{${param}}`, `${pathMap[param]}`);
  }

  const resQuery = formatQueryString(commonRequest.queryParams || {});
  return `${uri}${resQuery}`;
}

class ApiRequest {
  constructor(request, requestExecutor) {
    this.requestExecutor = requestExecutor;

    _defineProperty(this, "request", void 0);

    this.request = { ...request,
      uri: buildRelativeUri(request)
    };
  }

  clientRequest() {
    return this.request;
  }

  execute() {
    return this.requestExecutor(this.request);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyApiClientsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/api-clients/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/api-clients/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyApiClientsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyApiClientsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/api-clients',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/api-clients',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCartDiscountsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCartDiscountsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCartDiscountsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyCartDiscountsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyCartDiscountsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/cart-discounts',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/cart-discounts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCartsReplicateRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/carts/replicate',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the active cart of the customer that has been modified most recently.
   *	It does not consider carts with CartOrigin Merchant. If no active cart exists, a 404 Not Found error is returned.
   *
   *	The cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,
   *	send an Update request with the Recalculate update action instead.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/carts/customer-id={customerId}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCartsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  replicate() {
    return new ByProjectKeyCartsReplicateRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withCustomerId(childPathArgs) {
    return new ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withKey(childPathArgs) {
    return new ByProjectKeyCartsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyCartsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creating a cart can fail with an InvalidOperation if the referenced shipping method in the
   *	CartDraft has a predicate which does not match the cart.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCategoriesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCategoriesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCategoriesRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyCategoriesKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyCategoriesByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/categories',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creating a category produces the CategoryCreated message.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/categories',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyChannelsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/channels/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/channels/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/channels/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyChannelsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyChannelsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/channels',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/channels',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Get CustomObject by container and key
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Delete CustomObject by container and key
   */


  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomObjectsByContainerRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/custom-objects/{container}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomObjectsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withContainerAndKey(childPathArgs) {
    return new ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withContainer(childPathArgs) {
    return new ByProjectKeyCustomObjectsByContainerRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The query endpoint allows to retrieve custom objects in a specific container or all custom objects.
   *	For performance reasons, it is highly advisable to query only for custom objects in a container by using
   *	the container field in the where predicate.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/custom-objects',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates a new custom object or updates an existing custom object.
   *	If an object with the given container/key exists,
   *	the object will be replaced with the new value and the version is incremented.
   *	If the request contains a version and an object with the given container/key exists then the version
   *	must match the version of the existing object. Concurrent updates for the same custom object still can result
   *	in a Conflict (409) even if the version is not provided.
   *	Fields with null values will not be saved.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/custom-objects',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomerGroupsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customer-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customer-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/customer-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customer-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customer-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/customer-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomerGroupsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyCustomerGroupsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customer-groups',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customer-groups',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersEmailConfirmRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Verifies customer's email using a token.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/email/confirm',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersEmailTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Create a Token for verifying the Customer's Email
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/email-token',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersPasswordTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	The token value is used to reset the password of the customer with the given email. The token is
   *	valid only for 10 minutes.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/password-token',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersPasswordRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Change a customers password
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/password',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersPasswordResetRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Set a new password using a token.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/password/reset',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers/email-token={emailToken}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers/password-token={passwordToken}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyCustomersRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withPasswordToken(childPathArgs) {
    return new ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withEmailToken(childPathArgs) {
    return new ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	To verify a customer's email, an email token can be created. This should be embedded in a link and sent to the
   *	customer via email. When the customer clicks on the link, the "verify customer's email" endpoint should be called,
   *	which sets customer's isVerifiedEmail field to true.
   *
   */


  emailToken() {
    return new ByProjectKeyCustomersEmailTokenRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  emailConfirm() {
    return new ByProjectKeyCustomersEmailConfirmRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  password() {
    return new ByProjectKeyCustomersPasswordRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  passwordReset() {
    return new ByProjectKeyCustomersPasswordResetRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The following workflow can be used to reset the customer's password:
   *
   *	* Create a password reset token and send it embedded in a link to the customer.
   *	* When the customer clicks on the link, the customer is retrieved with the token.
   *	* The customer enters a new password and the "reset customer's password" endpoint is called.
   *
   */


  passwordToken() {
    return new ByProjectKeyCustomersPasswordTokenRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withKey(childPathArgs) {
    return new ByProjectKeyCustomersKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyCustomersByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates a customer. If an anonymous cart is passed in,
   *	then the cart is assigned to the created customer and the version number of the Cart will increase.
   *	If the ID of an anonymous session is given, all carts and orders will be assigned to the created customer.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyDiscountCodesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/discount-codes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/discount-codes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/discount-codes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyDiscountCodesRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyDiscountCodesByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/discount-codes',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/discount-codes',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyExtensionsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the representation of an extension by its id.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/extensions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/extensions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/extensions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyExtensionsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the representation of an extension by its key.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/extensions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/extensions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/extensions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyExtensionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyExtensionsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyExtensionsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/extensions',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Currently, a maximum of 25 extensions can be created per project.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/extensions',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyGraphqlRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Execute a GraphQL query
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/graphql',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/graphql',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/replicate',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Returns a cart by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	If the cart exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
   *	If the cart exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the active cart of the customer that has been modified most recently in a specific Store.
   *	The {storeKey} path parameter maps to a Store's key.
   *
   *	If the cart exists in the commercetools project but does not have the store field, or the store field
   *	references a different store, this method returns a ResourceNotFound error.
   *
   *	The cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,
   *	send an Update request with the Recalculate update action instead.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Returns a cart by its key from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	If the cart exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
   *	If the cart exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withCustomerId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  replicate() {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Queries carts in a specific Store. The {storeKey} path parameter maps to a Store's key.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
   *	When using this endpoint the cart's store field is always set to the store specified in the path parameter.
   *	Creating a cart can fail with an InvalidOperation if the referenced shipping method
   *	in the CartDraft has a predicate which does not match the cart.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Verifies customer's email using a token.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email/confirm',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Create a Token for verifying the Customer's Email in store
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	The token value is used to reset the password of the customer with the given email. The token is
   *	valid only for 10 minutes.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Change a customers password
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Set a new password using a token.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password/reset',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Returns a customer by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	It also considers customers that do not have the stores field.
   *	If the customer exists in the commercetools project but the stores field references different stores,
   *	this method returns a ResourceNotFound error.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
   *	If the customer exists in the commercetools project but the stores field references a different store,
   *	this method returns a ResourceNotFound error.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Returns a customer by its Key from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	It also considers customers that do not have the stores field.
   *	If the customer exists in the commercetools project but the stores field references different stores,
   *	this method returns a ResourceNotFound error.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the customer exists in the commercetools project but the stores field references a different store,
   *	this method returns a ResourceNotFound error.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withPasswordToken(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withEmailToken(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	To verify a customer's email, an email token can be created. This should be embedded in a link and sent to the
   *	customer via email. When the customer clicks on the link,
   *	the "verify customer's email" endpoint should be called,
   *	which sets customer's isVerifiedEmail field to true.
   *
   */


  emailToken() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  emailConfirm() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  password() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  passwordReset() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The following workflow can be used to reset the customer's password:
   *
   *	* Create a password reset token and send it embedded in a link to the customer.
   *	* When the customer clicks on the link, the customer is retrieved with the token.
   *	* The customer enters a new password and the "reset customer's password" endpoint is called.
   *
   */


  passwordToken() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates a customer in a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	When using this endpoint, if omitted,
   *	the customer's stores field is set to the store specified in the path parameter.
   *	If an anonymous cart is passed in as when using this method,
   *	then the cart is assigned to the created customer and the version number of the Cart increases.
   *	If the ID of an anonymous session is given, all carts and orders will be assigned to the created customer and
   *	the store specified. If you pass in a cart with a store field specified,
   *	the store field must reference the same store specified in the {storeKey} path parameter.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Authenticate Customer (Sign In) in store
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/login',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/active-cart',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets a shopping list by ID.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets a shopping list by Key.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Update a shopping list found by its Key.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */


  carts() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An order can be created from a order, usually after a checkout process has been completed.
   */


  orders() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  activeCart() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	shopping-lists e.g. for wishlist support
   *
   */


  shoppingLists() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Returns an order by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	If the order exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
   *	If the order exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Returns an order by its order number from a specific Store.
   *	The {storeKey} path parameter maps to a Store's key.
   *	If the order exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
   *	If the order exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withOrderNumber(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Queries orders in a specific Store. The {storeKey} path parameter maps to a Store's key.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates an order from a Cart from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	When using this endpoint the orders's store field is always set to the store specified in the path parameter.
   *	The cart must have a shipping address set before creating an order. When using the Platform TaxMode,
   *	the shipping address is used for tax calculation.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Get ShippingMethods for a cart in a store
   */


  matchingCart() {
    return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets a shopping list by ID.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets a shopping list by Key.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Update a shopping list found by its Key.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInStoreKeyByStoreKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */


  carts() {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An order can be created from a cart, usually after a checkout process has been completed.
   */


  orders() {
    return new ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  me() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A customer is a person purchasing products. customers, Orders,
   *	Comments and Reviews can be associated to a customer.
   *
   */


  customers() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Retrieves the authenticated customer.
   */


  login() {
    return new ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  shippingMethods() {
    return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	shopping-lists e.g. for wishlist support
   *
   */


  shoppingLists() {
    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInventoryByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/inventory/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/inventory/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/inventory/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyInventoryRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyInventoryByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/inventory',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/inventory',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyLoginRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Authenticate Customer (Sign In). Retrieves the authenticated
   *	customer (a customer that matches the given email/password pair).
   *	If used with an access token for Anonymous Sessions,
   *	all orders and carts belonging to the anonymousId will be assigned to the newly created customer.
   *	If a cart is is returned as part of the CustomerSignInResult,
   *	it has been recalculated (It will have up-to-date prices, taxes and discounts,
   *	and invalid line items have been removed.).
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/login',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeActiveCartRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/active-cart',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeCartsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyMeCartsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyMeCartsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/carts',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeEmailConfirmRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/email/confirm',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeLoginRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/login',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyMeOrdersByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/orders',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMePasswordResetRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/password/reset',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMePasswordRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  reset() {
    return new ByProjectKeyMePasswordResetRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/password',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMePaymentsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMePaymentsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMePaymentsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyMePaymentsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyMePaymentsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/payments',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/payments',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeShoppingListsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeShoppingListsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyMeShoppingListsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withKey(childPathArgs) {
    return new ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeSignupRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/signup',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMeRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  emailConfirm() {
    return new ByProjectKeyMeEmailConfirmRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  password() {
    return new ByProjectKeyMePasswordRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  signup() {
    return new ByProjectKeyMeSignupRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  login() {
    return new ByProjectKeyMeLoginRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  activeCart() {
    return new ByProjectKeyMeActiveCartRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */


  carts() {
    return new ByProjectKeyMeCartsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An order can be created from a cart, usually after a checkout process has been completed.
   */


  orders() {
    return new ByProjectKeyMeOrdersRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The My Payments endpoint creates and provides access to payments scoped to a specific user.
   */


  payments() {
    return new ByProjectKeyMePaymentsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The My Shopping Lists endpoint creates and provides access to shopping lists scoped to a specific user.
   */


  shoppingLists() {
    return new ByProjectKeyMeShoppingListsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Update my customer
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Delete my Customer
   */


  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMessagesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/messages/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyMessagesRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withId(childPathArgs) {
    return new ByProjectKeyMessagesByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/messages',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyOrdersEditsByIDApplyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/edits/{ID}/apply',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyOrdersEditsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  apply() {
    return new ByProjectKeyOrdersEditsByIDApplyRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/edits/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/edits/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/orders/edits/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyOrdersEditsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/edits/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/edits/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/orders/edits/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyOrdersEditsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyOrdersEditsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyOrdersEditsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/edits',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/edits',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyOrdersImportRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Create an Order by Import
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/import',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  importOrder() {
    return new ByProjectKeyOrdersImportRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withOrderNumber(childPathArgs) {
    return new ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	OrderEdit are containers for financial changes after an Order has been placed.
   */


  edits() {
    return new ByProjectKeyOrdersEditsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyOrdersByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates an order from a Cart.
   *	The cart must have a shipping address set before creating an order.
   *	When using the Platform TaxMode, the shipping address is used for tax calculation.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyPaymentsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyPaymentsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyPaymentsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyPaymentsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyPaymentsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/payments',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	To create a payment object a payment draft object has to be given with the request.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/payments',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductDiscountsMatchingRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-discounts/matching',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductDiscountsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductDiscountsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductDiscountsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  matching() {
    return new ByProjectKeyProductDiscountsMatchingRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withKey(childPathArgs) {
    return new ByProjectKeyProductDiscountsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyProductDiscountsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-discounts',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-discounts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductProjectionsSearchRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Search Product Projection
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-projections/search',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Search Product Projection
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections/search',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductProjectionsSuggestRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections/suggest',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductProjectionsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a product in a catalog by ID.
   *	When used with an API client that has the view_published_products:{projectKey} scope,
   *	this endpoint only returns published (current) product projections.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductProjectionsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a product found by Key.
   *	When used with an API client that has the view_published_products:{projectKey} scope,
   *	this endpoint only returns published (current) product projections.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductProjectionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	This endpoint provides high performance search queries over ProductProjections. The query result contains the
   *	ProductProjections for which at least one ProductVariant matches the search query. This means that variants can
   *	be included in the result also for which the search query does not match. To determine which ProductVariants match
   *	the search query, the returned ProductProjections include the additional field isMatchingVariant.
   *
   */


  search() {
    return new ByProjectKeyProductProjectionsSearchRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The source of data for suggestions is the searchKeyword field in a product
   */


  suggest() {
    return new ByProjectKeyProductProjectionsSuggestRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withKey(childPathArgs) {
    return new ByProjectKeyProductProjectionsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyProductProjectionsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	You can use the product projections query endpoint to get the current or staged representations of Products.
   *	When used with an API client that has the view_published_products:{projectKey} scope,
   *	this endpoint only returns published (current) product projections.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductTypesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductTypesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductTypesRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyProductTypesKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyProductTypesByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-types',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-types',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductsByIDImagesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Uploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products/{ID}/images',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  images() {
    return new ByProjectKeyProductsByIDImagesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Gets the full representation of a product by ID.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/products/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Checks if product with given ID exists.
   */


  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/products/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/products/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets the full representation of a product by Key.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/products/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Checks if product with given key exists.
   */


  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/products/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/products/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyProductsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyProductsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyProductsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	You can use the query endpoint to get the full representations of products.
   *	REMARK: We suggest to use the performance optimized search endpoint which has a bunch functionalities,
   *	the query API lacks like sorting on custom attributes, etc.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/products',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Checks if products exist.
   */


  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/products',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  /**
   *	To create a new product, send a representation that is going to become the initial staged representation
   *	of the new product in the master catalog. If price selection query parameters are provided,
   *	the selected prices will be added to the response.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyReviewsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/reviews/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/reviews/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/reviews/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyReviewsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/reviews/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/reviews/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/reviews/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyReviewsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyReviewsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyReviewsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/reviews',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/reviews',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShippingMethodsMatchingCartRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/matching-cart',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShippingMethodsMatchingLocationRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/matching-location',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/matching-orderedit',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShippingMethodsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shipping-methods/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/shipping-methods/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShippingMethodsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shipping-methods/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/shipping-methods/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShippingMethodsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyShippingMethodsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Get ShippingMethods for a cart
   */


  matchingCart() {
    return new ByProjectKeyShippingMethodsMatchingCartRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Get ShippingMethods for an order edit
   */


  matchingOrderedit() {
    return new ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Get ShippingMethods for a location
   */


  matchingLocation() {
    return new ByProjectKeyShippingMethodsMatchingLocationRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyShippingMethodsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shipping-methods',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShoppingListsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets a shopping list by ID.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShoppingListsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets a shopping list by Key.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Update a shopping list found by its Key.
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyShoppingListsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyShoppingListsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyShoppingListsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyStatesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/states/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/states/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/states/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyStatesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/states/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/states/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/states/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyStatesRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyStatesKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyStatesByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/states',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/states',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyStoresByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/stores/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/stores/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/stores/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyStoresKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/stores/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/stores/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/stores/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyStoresRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyStoresKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyStoresByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/stores',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/stores',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeySubscriptionsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the representation of a subscription by its id.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/subscriptions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/subscriptions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/subscriptions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeySubscriptionsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the representation of a subscription by its key.
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/subscriptions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/subscriptions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/subscriptions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeySubscriptionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeySubscriptionsKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeySubscriptionsByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/subscriptions',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	The creation of a Subscription is eventually consistent, it may take up to a minute before it becomes fully active.
   *	In order to test that the destination is correctly configured, a test message will be put into the queue.
   *	If the message could not be delivered, the subscription will not be created.
   *	The payload of the test message is a notification of type ResourceCreated for the resourceTypeId subscription.
   *	Currently, a maximum of 25 subscriptions can be created per project.
   *
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/subscriptions',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyTaxCategoriesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/tax-categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/tax-categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/tax-categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/tax-categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/tax-categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/tax-categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyTaxCategoriesRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyTaxCategoriesByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/tax-categories',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/tax-categories',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyTypesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyTypesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyTypesRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyTypesKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyTypesByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/types',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/types',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyZonesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/zones/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/zones/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/zones/{ID}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyZonesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/zones/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/zones/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/zones/key={key}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyZonesRequestBuilder {
  constructor(args) {
    this.args = args;
  }

  withKey(childPathArgs) {
    return new ByProjectKeyZonesKeyByKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  withId(childPathArgs) {
    return new ByProjectKeyZonesByIDRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/zones',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }

  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/zones',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
class ByProjectKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Categories are used to organize products in a hierarchical structure.
   */


  categories() {
    return new ByProjectKeyCategoriesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */


  carts() {
    return new ByProjectKeyCartsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Cart discounts are used to change the prices of different elements within a cart.
   */


  cartDiscounts() {
    return new ByProjectKeyCartDiscountsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Channels represent a source or destination of different entities. They can be used to model warehouses or stores.
   *
   */


  channels() {
    return new ByProjectKeyChannelsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A customer is a person purchasing products. customers, Orders, Comments and Reviews can be associated to a customer.
   *
   */


  customers() {
    return new ByProjectKeyCustomersRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	customer-groups are used to evaluate products and channels.
   */


  customerGroups() {
    return new ByProjectKeyCustomerGroupsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Store custom JSON values.
   */


  customObjects() {
    return new ByProjectKeyCustomObjectsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Discount codes can be added to a discount-code to enable certain discount-code discounts.
   */


  discountCodes() {
    return new ByProjectKeyDiscountCodesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The commercetools™ platform provides a GraphQL API
   */


  graphql() {
    return new ByProjectKeyGraphqlRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Inventory allows you to track stock quantities.
   */


  inventory() {
    return new ByProjectKeyInventoryRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Retrieves the authenticated customer.
   */


  login() {
    return new ByProjectKeyLoginRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A message represents a change or an action performed on a resource (like an Order or a Product).
   */


  messages() {
    return new ByProjectKeyMessagesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An order can be created from a order, usually after a checkout process has been completed.
   */


  orders() {
    return new ByProjectKeyOrdersRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Payments hold information about the current state of receiving and/or refunding money
   */


  payments() {
    return new ByProjectKeyPaymentsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Products are the sellable goods in an e-commerce project on CTP. This document explains some design concepts
   *	of products on CTP and describes the available HTTP APIs for working with them.
   *
   */


  products() {
    return new ByProjectKeyProductsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Product discounts are used to change certain product prices.
   */


  productDiscounts() {
    return new ByProjectKeyProductDiscountsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A projected representation of a product shows the product with its current or staged data. The current or staged
   *	representation of a product in a catalog is called a product projection.
   *
   */


  productProjections() {
    return new ByProjectKeyProductProjectionsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Product Types are used to describe common characteristics, most importantly common custom attributes,
   *	of many concrete products.
   *
   */


  productTypes() {
    return new ByProjectKeyProductTypesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Reviews are used to evaluate products and channels.
   */


  reviews() {
    return new ByProjectKeyReviewsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Shipping Methods define where orders can be shipped and what the costs are.
   */


  shippingMethods() {
    return new ByProjectKeyShippingMethodsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	shopping-lists e.g. for wishlist support
   */


  shoppingLists() {
    return new ByProjectKeyShoppingListsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The commercetools platform allows you to model states of certain objects, such as orders, line items, products,
   *	reviews, and payments in order to define finite state machines reflecting the business logic you'd like to
   *	implement.
   *
   */


  states() {
    return new ByProjectKeyStatesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Subscriptions allow you to be notified of new messages or changes via a Message Queue of your choice
   */


  subscriptions() {
    return new ByProjectKeySubscriptionsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Tax Categories define how products are to be taxed in different countries.
   */


  taxCategories() {
    return new ByProjectKeyTaxCategoriesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Types define custom fields that are used to enhance resources as you need.
   */


  types() {
    return new ByProjectKeyTypesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Zones allow defining ShippingRates for specific Locations.
   */


  zones() {
    return new ByProjectKeyZonesRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  me() {
    return new ByProjectKeyMeRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Extend the behavior of an API with your business logic
   */


  extensions() {
    return new ByProjectKeyExtensionsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Manage your API Clients via an API. Useful for Infrastructure-as-Code tooling, and regularly rotating API secrets.
   *
   */


  apiClients() {
    return new ByProjectKeyApiClientsRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Stores let you model the context your customers shop in.
   */


  stores() {
    return new ByProjectKeyStoresRequestBuilder({
      pathArgs: { ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  inStoreKeyWithStoreKeyValue(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyRequestBuilder({
      pathArgs: { ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The Endpoint is responding a limited set of information about settings and configuration of the project.
   *
   */


  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}',
      pathVariables: this.args.pathArgs,
      headers: { ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  /**
   *	Update project
   */


  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }

}

class ApiRoot {
  constructor(args) {
    _defineProperty(this, "executeRequest", void 0);

    _defineProperty(this, "baseUri", void 0);

    this.executeRequest = args.executeRequest;
    this.baseUri = args.baseUri ?? 'https://api.europe-west1.gcp.commercetools.com';
  }
  /**
   *	The Project endpoint is used to retrieve certain information from a project.
   */


  withProjectKey(childPathArgs) {
    return new ByProjectKeyRequestBuilder({
      pathArgs: { ...childPathArgs
      },
      executeRequest: this.executeRequest,
      baseUri: this.baseUri
    });
  }

}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
const createExecutorFromMiddlewares = (executor, midds) => {
  if (!midds || midds.length == 0) {
    return executor;
  }

  const reduced = midds.reduce(reduceMiddleware);
  return middlewareToExecutor(reduced, executor);
};

function reduceMiddleware(middleware1, middleware2) {
  return (request, executor) => middleware1(request, middlewareToExecutor(middleware2, executor));
}

function middlewareToExecutor(middleware, executor) {
  return request => middleware(request, executor);
}

function createApiBuilderFromCtpClient(ctpClient, baseUri) {
  return new ApiRoot({
    executeRequest: ctpClient.execute,
    baseUri: baseUri
  });
}

exports.ApiRoot = ApiRoot;
exports.createApiBuilderFromCtpClient = createApiBuilderFromCtpClient;
exports.createExecutorFromMiddlewares = createExecutorFromMiddlewares;
