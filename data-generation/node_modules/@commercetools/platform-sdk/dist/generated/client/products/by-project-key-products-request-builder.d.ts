/**
 *
 *    Generated file, please do not change!!!
 *    From http://www.vrap.io/ with love
 *
 *                ,d88b.d88b,
 *                88888888888
 *                `Y8888888Y'
 *                  `Y888Y'
 *                    `Y'
 *
 */
import {
  Product,
  ProductDraft,
  ProductPagedQueryResponse,
} from '../../models/product'
import { executeRequest, QueryParam } from '../../shared/utils/common-types'
import { ApiRequest } from '../../shared/utils/requests-utils'
import { ByProjectKeyProductsByIDRequestBuilder } from './by-project-key-products-by-id-request-builder'
import { ByProjectKeyProductsKeyByKeyRequestBuilder } from './by-project-key-products-key-by-key-request-builder'
export declare class ByProjectKeyProductsRequestBuilder {
  protected readonly args: {
    pathArgs: {
      projectKey: string
    }
    executeRequest: executeRequest
    baseUri?: string
  }
  constructor(args: {
    pathArgs: {
      projectKey: string
    }
    executeRequest: executeRequest
    baseUri?: string
  })
  withKey(childPathArgs: {
    key: string
  }): ByProjectKeyProductsKeyByKeyRequestBuilder
  withId(childPathArgs: { ID: string }): ByProjectKeyProductsByIDRequestBuilder
  /**
   *	You can use the query endpoint to get the full representations of products.
   *	REMARK: We suggest to use the performance optimized search endpoint which has a bunch functionalities,
   *	the query API lacks like sorting on custom attributes, etc.
   *
   */
  get(methodArgs?: {
    queryArgs?: {
      priceCurrency?: string
      priceCountry?: string
      priceCustomerGroup?: string
      priceChannel?: string
      localeProjection?: string
      storeProjection?: string
      expand?: string | string[]
      sort?: string | string[]
      limit?: number
      offset?: number
      withTotal?: boolean
      where?: string | string[]
      [key: string]: QueryParam
    }
    headers?: {
      [key: string]: string | string[]
    }
  }): ApiRequest<ProductPagedQueryResponse>
  /**
   *	To create a new product, send a representation that is going to become the initial staged representation
   *	of the new product in the master catalog. If price selection query parameters are provided,
   *	the selected prices will be added to the response.
   *
   */
  post(methodArgs: {
    queryArgs?: {
      priceCurrency?: string
      priceCountry?: string
      priceCustomerGroup?: string
      priceChannel?: string
      localeProjection?: string
      storeProjection?: string
      expand?: string | string[]
      [key: string]: QueryParam
    }
    body: ProductDraft
    headers?: {
      [key: string]: string | string[]
    }
  }): ApiRequest<Product>
}
